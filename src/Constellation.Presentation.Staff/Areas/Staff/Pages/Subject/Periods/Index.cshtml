@page
@model Constellation.Presentation.Staff.Areas.Staff.Pages.Subject.Periods.IndexModel

@inject IAuthorizationService authService

@{
    var authorised = await authService.AuthorizeAsync(User, AuthPolicies.IsSiteAdmin);
}

<h2>Periods View</h2>

<div class="page-menu">
    @if (authorised.Succeeded)
    {
        <a asp-page="/Subject/Periods/Upsert" asp-area="Staff" class="btn btn-info">Create New</a>
    }
</div>

<hr />

<div>
    <div class="nav nav-pills" data-tabs="tabs">
        @{
            var timetables = Model.Periods.OrderBy(p => p.Timetable).GroupBy(p => p.Timetable);
            bool firstTab = true;

            foreach (var timetable in timetables)
            {
                var code = timetable.Key.Code;

                <a class="nav-link @(firstTab ? "active" : "")" href="#@(code)" data-toggle="tab" role="tab">@timetable.Key.DisplayName</a>
                firstTab = false;
            }
        }
    </div>

    <div class="tab-content">
        @{
            firstTab = true;
            foreach (var block in timetables)
            {
                var code = block.Key.Code;

                <div id="@(code)" class="tab-pane @(firstTab ? "active" : "")">
                    @{
                        var weeks = block.OrderBy(p => p.Week.Value).GroupBy(p => p.Week);

                        foreach (var week in weeks)
                        {
                            var days = week.OrderBy(p => p.Day.Value).GroupBy(p => p.Day);

                            <div class="Timetable-Week">
                                @foreach (var day in days)
                                {
                                    var periods = day.OrderBy(p => p.StartTime);

                                    <div class="Timetable-Day">
                                        @week.Key.Name @day.Key.Name

                                        @foreach (var period in periods)
                                        {
                                            var length = period.EndTime.Subtract(period.StartTime).Minutes;
                                            length += period.EndTime.Subtract(period.StartTime).Hours * 60;
                                            length = (int)(length * 1.25);

                                            if (authorised.Succeeded)
                                            {
                                                <a asp-page="/Subject/Periods/Upsert" asp-area="Staff" asp-route-id="@period.PeriodId" class="blockLink">
                                                    <div class="Timetable-Period Timetable-@period.Type.Name" style="height: @(length)px;" title="@period.StartTime.As12HourTime() - @period.EndTime.As12HourTime()">
                                                        @period.Name<br />
                                                    </div>
                                                </a>
                                            }
                                            else
                                            {
                                                <div class="Timetable-Period Timetable-@period.Type.Name" style="height: @(length)px;" title="@period.StartTime.As12HourTime() - @period.EndTime.As12HourTime()">
                                                    @period.Name<br />
                                                </div>
                                            }
                                        }
                                    </div>
                                }

                            </div>
                        }
                    }
                </div>

                firstTab = false;
            }
        }
    </div>
</div>