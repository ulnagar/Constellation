@page "{id:Guid?}"
@model Constellation.Presentation.Staff.Areas.Staff.Pages.SchoolAdmin.Awards.Nominations.UpsertModel

@using Constellation.Core.Enums;
@using Constellation.Core.Extensions
@using Constellation.Core.Models.Awards.Identifiers
@using Constellation.Core.Models.Identifiers

@{
    string Title = Model.Id != AwardNominationPeriodId.Empty ? "Edit Nomination Period" : "Create new Nomination Period";
}

<h2>@Title</h2>

<div class="page-menu">
    <a asp-page="/SchoolAdmin/Awards/Nominations/Index" asp-area="Staff" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<form method="post">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row">
            <label asp-for="Name" class="col-md-2">Name</label>
            <div class="col-md-3">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="LockoutDate" class="col-md-2">Lock Date</label>
            <div class="col-md-3">
                <input asp-for="LockoutDate" class="form-control" type="date" value="@Model.LockoutDate.ToString("yyyy")-@Model.LockoutDate.ToString("MM")-@Model.LockoutDate.ToString("dd")" />
                <span asp-validation-for="LockoutDate" class="text-danger"></span>
            </div>
        </div>

        
        <div class="form-group row">
            <label asp-for="Grades" class="col-md-2">Included Grades</label>
            @if (Model.Id != AwardNominationPeriodId.Empty)
            {
                <div class="col-md-8">
                    <div class="row">
                        <span class="text-danger">You cannot edit selected grades for an existing nomination period.</span>
                    </div>

                    <div class="row">
                        @foreach (var grade in Model.Grades)
                        {
                            <button type="button" class="btn btn-info m-2">@grade.AsName()</button>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="col-md-8">
                    <div class="row">
                        <button id="gradeSelect-@Grade.Y05" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y05')">@Grade.Y05.AsName()</button>
                        <button id="gradeSelect-@Grade.Y06" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y06')">@Grade.Y06.AsName()</button>
                    </div>

                    <div class="row">
                        <button id="gradeSelect-@Grade.Y07" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y07')">@Grade.Y07.AsName()</button>
                        <button id="gradeSelect-@Grade.Y08" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y08')">@Grade.Y08.AsName()</button>
                        <button id="gradeSelect-@Grade.Y09" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y09')">@Grade.Y09.AsName()</button>
                        <button id="gradeSelect-@Grade.Y10" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y10')">@Grade.Y10.AsName()</button>
                    </div>

                    <div class="row">
                        <button id="gradeSelect-@Grade.Y11" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y11')">@Grade.Y11.AsName()</button>
                        <button id="gradeSelect-@Grade.Y12" type="button" class="btn btn-outline-info select-button m-2" onClick="toggleGrade('@Grade.Y12')">@Grade.Y12.AsName()</button>
                    </div>

                    <div id="SelectedGradesList"> </div>
                    <span asp-validation-for="Grades" class="text-danger"></span>
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <input type="submit" value="Save" class="btn btn-primary btn-block btn-lg" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function toggleGrade(grade) {
            var selectDiv = $('#gradeSelect-' + grade);
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('#i-gradeSelect-' + grade).remove();
            }
            else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info')

                var input = $('<input>').attr('id', 'i-gradeSelect-' + grade)
                    .attr('name', 'Grades')
                    .attr('type', "hidden");
                input.val(grade);
                var classInputDiv = $('#SelectedGradesList');
                classInputDiv.append(input);
            }
        }
    </script>
}