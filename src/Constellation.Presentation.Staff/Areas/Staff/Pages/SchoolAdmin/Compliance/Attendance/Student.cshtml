@page "{StudentId}"
@model Constellation.Presentation.Staff.Areas.Staff.Pages.SchoolAdmin.Compliance.Attendance.StudentModel

@using Constellation.Core.Extensions
@using Newtonsoft.Json

<h2>Student Attendance Review</h2>

<div class="page-menu">
    <a asp-page="/SchoolAdmin/Compliance/Attendance/Index" asp-area="Staff" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<h3>Student Details</h3>

<dl>
    <dt>Name</dt>
    <dd>@Model.Student?.Name.DisplayName</dd>
    
    <dt>Grade</dt>
    <dd>@Model.Student?.Grade?.AsName()</dd>
    
    <dt>School</dt>
    <dd>@Model.Student?.School</dd>
</dl>

<h3 class="mt-3">Graphs</h3>

<div class="row mt-2">
    <div class="col">
        <h4>Per Day Week</h4>
        <canvas id="day-Fn"></canvas>
    </div>
    <div class="col">
        <h4>Per Day YTD</h4>
        <canvas id="day-Ytd"></canvas>
    </div>
</div>

<div class="row mt-2">
    <div class="col">
        <h4>Per Minute Week</h4>
        <canvas id="min-Fn"></canvas>
    </div>
    <div class="col">
        <h4>Per Minute YTD</h4>
        <canvas id="min-Ytd"></canvas>
    </div>
</div>

<h3 class="mt-3">Data</h3>

<table class="table">
    <thead>
        <tr>
            <th rowspan="2">Range</th>
            <th colspan="2">Per Day</th>
            <th colspan="2">Per Minute</th>
        </tr>
        <tr>
            <th>Week</th>
            <th>YTD</th>
            <th>Week</th>
            <th>YTD</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in Model.Points.OrderBy(entry => entry.StartDate))
        {
            <tr>
                <td>@entry.PeriodLabel (@entry.StartDate.ToShortDateString() - @entry.EndDate.ToShortDateString())</td>
                <td>@entry.PerDayWeekPercentage</td>
                <td>@entry.PerDayYearToDatePercentage</td>
                <td>@entry.PerMinuteWeekPercentage</td>
                <td>@entry.PerMinuteYearToDatePercentage</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    <script>
        showGraph(
            'day-Fn',
            @Html.Raw(JsonConvert.SerializeObject(Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.StartDate).ToArray())),
            @JsonConvert.SerializeObject(@Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.PerDayWeekPercentage).ToArray())
        )

        showGraph(
            'day-Ytd',
            @Html.Raw(JsonConvert.SerializeObject(Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.StartDate).ToArray())),
            @JsonConvert.SerializeObject(@Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.PerDayYearToDatePercentage).ToArray())
        )

        showGraph(
            'min-Fn',
            @Html.Raw(JsonConvert.SerializeObject(Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.StartDate).ToArray())),
            @JsonConvert.SerializeObject(@Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.PerMinuteWeekPercentage).ToArray())
        )

        showGraph(
            'min-Ytd',
            @Html.Raw(JsonConvert.SerializeObject(Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.StartDate).ToArray())),
            @JsonConvert.SerializeObject(@Model.Points.OrderBy(entry => entry.StartDate).Skip(Model.Points.Count - 5).Select(entry => entry.PerMinuteYearToDatePercentage).ToArray())
        )

        function showGraph(elementId, labels, values) {
            ctx = document.getElementById(elementId).getContext('2d');
            chart = new Chart(ctx,
                {
                    type: 'line',
                    data:
                    {
                        labels: labels,
                        datasets:
                            [
                                {
                                    data: values,
                                    fill: true,
                                    pointRadius: 0,
                                    spanGaps: true,
                                    tension: 0.2
                                }
                            ]
                    },
                    options: {
                        responsive: false,
                        borderColor: '#434343',
                        borderWidth: 1.5,
                        plugins:
                        {
                            legend:
                            {
                                display: false,
                                labels: {
                                    display: false
                                }
                            },
                            tooltips:
                            {
                                enabled: false
                            },
                        },
                        scales:
                        {
                            yAxis:
                            {
                                display: false,
                                min: 0,
                                max: 100
                            },
                            xAxis:
                            {
                                display: false
                            }
                        }
                    }
                });
        }
    </script>
}
