@page
@using Constellation.Core.Models.Covers.Enums
@model Constellation.Presentation.Staff.Areas.Staff.Pages.ShortTerm.Covers.CreateModel

<h2>Create New Cover</h2>

<div class="page-menu">
    <a asp-page="/ShortTerm/Covers/Index" asp-area="Staff" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<form asp-page-handler="Create" method="post">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group row">
            <label asp-for="CoverType" class="col-md-2">Cover Type</label>
            <div class="col-md-5">
                <div class="row">
                    @foreach (var type in Model.CoverTypeList)
                    {
                        <div class="col-6">
                            <input type="radio" asp-for="CoverType" id="CoverType-@type.Value" value="@type" onchange="toggleNote('@type.Value')" /> @type
                        </div>
                    }
                </div>
                <span asp-validation-for="CoverType" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="CoveringTeacherId" class="col-md-2">Covering Teacher</label>
            <div class="col-md-5">
                <select asp-for="CoveringTeacherId" asp-items="@(new SelectList(Model.CoveringTeacherSelectionList, "Id", "DisplayName", null, "Category"))" class="form-control combo custom-select">
                    <option selected="selected" value=""> -- Please Select -- </option>
                </select>
                <span asp-validation-for="CoveringTeacherId" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="CoveredClasses" class="col-md-12">Selected Classes</label>
            <div class="col-offset-1 col-md-2">
                <button id="ShowClassSelectList" type="button" class="btn btn-success">Add Classes</button>
            </div>
            <div class="col-md-8" id="CoveredClassesList">
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="StartDate" class="col-md-2">Start Date</label>
            <div class="col-md-5">
                <input type="date" asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="EndDate" class="col-md-2">End Date</label>
            <div class="col-md-5">
                <input type="date" asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
        </div>
        
        <div class="form-group row note-row d-none">
            <label asp-for="Note" class="col-md-2">Note</label>
            <div class="col-md-5">
                <textarea asp-for="Note" class="form-control">Sample Note</textarea>
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <input type="submit" value="Save" class="btn btn-primary btn-block btn-lg" />
            </div>
        </div>
    </div>
</form>

<div class="modal" id="ClassListModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Classes for Cover</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <h5 class="col-md-12">Selected Classes:</h5>
                        <div class="col-md-12" id="ModalCoveredClassesList"> </div>
                    </div>
                    @foreach (var grade in Model.ClassSelectionList.OrderBy(entry => entry.Grade).ThenBy(entry => entry.Name).GroupBy(entry => entry.Grade))
                    {
                        <div class="row">
                            <div class="col-md-2">
                                <h5>@grade.Key</h5>
                            </div>
                            <div class="col">
                                @foreach (var offering in grade)
                                {
                                    <button id="offeringSelect-@offering.Id" class="btn btn-outline-info class-button" onClick="toggleClass('@offering.Id')">@offering.Name (@offering.Teacher)</button>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // When the button is pressed
        //  1. show the modal with the class list
        $('#ShowClassSelectList').on('click', function() {
            $('#ClassListModal').modal('show');
        });

        function toggleClass(offeringId) {
            console.log(offeringId);

            var selectDiv = $('#offeringSelect-' + offeringId);

            console.log(selectDiv);

            if (selectDiv.hasClass('btn-info'))
            {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('#pd-offeringSelect-' + offeringId).remove();
                $('#md-offeringSelect-' + offeringId).remove();
                $('#i-offeringSelect-' + offeringId).remove();
            } 
            else 
            {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info')

                var pageDisplayDiv = $('#offeringSelect-' + offeringId).clone().prop('id', 'pd-offeringSelect-' + offeringId);
                pageDisplayDiv.appendTo('#CoveredClassesList');
                var modalDisplayDiv = $('#offeringSelect-' + offeringId).clone().prop('id', 'md-offeringSelect-' + offeringId);
                modalDisplayDiv.appendTo('#ModalCoveredClassesList');

                var input = $('<input>').attr('id', 'i-offeringSelect-' + offeringId)
                    .attr('name', 'CoveredClasses')
                    .attr('type', "hidden");
                input.val(offeringId);
                var classInputDiv = $('#CoveredClassesList');
                classInputDiv.append(input);
            }
        }

        function toggleNote(coverType) {
            if (coverType === '@CoverType.ClassCover.Value' && !($('.note-row').hasClass('d-none'))) {
                $('.note-row').addClass('d-none');
                $('.note-row textarea').val('Sample Note');
            }

            if (coverType === '@CoverType.AccessCover.Value' && $('.note-row').hasClass('d-none')) {
                $('.note-row').removeClass('d-none');
                $('.note-row textarea').val('');
            }
        }
    </script>
}