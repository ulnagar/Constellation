@page
@model ConfigurationModel

@using Constellation.Core.Models.Absences;
@using Constellation.Core.Models.Absences.Enums
@using Constellation.Presentation.Staff.Areas.Staff.Pages.StudentAdmin.Attendance
@using Microsoft.AspNetCore.Mvc.TagHelpers

@inject IAuthorizationService authorisationService

@{
    var authorised = await authorisationService.AuthorizeAsync(User, AuthPolicies.CanManageAbsences);

    var allStyle = "btn-outline-secondary";
    var enabledStyle = allStyle;
    var disabledStyle = allStyle;

    switch (Model.Filter)
    {
        case ConfigurationModel.FilterDto.Enabled:
            enabledStyle = "btn-primary";
            break;
        case ConfigurationModel.FilterDto.Disabled:
            disabledStyle = "btn-primary";
            break;
        default:
            allStyle = "btn-primary";
            break;
    }
}

<h2>Student Absence Settings</h2>

<div class="page-menu">
    <div class="btn-group" role="group">
        <a asp-route-filter="@ConfigurationModel.FilterDto.All" class="btn @allStyle">All</a>
        <a asp-route-filter="@ConfigurationModel.FilterDto.Enabled" class="btn @enabledStyle">Enabled</a>
        <a asp-route-filter="@ConfigurationModel.FilterDto.Disabled" class="btn @disabledStyle">Disabled</a>
    </div>

    @if (authorised.Succeeded)
    {
        <div class="btn-group new-group" role="group">
            <a asp-page="/StudentAdmin/Attendance/Settings" asp-area="Staff" class="btn btn-warning">Create New</a>
        </div>
    }

</div>

<hr />

<table class="table-striped table-hover grouped-data-table" style="width: 100%">
    <thead>
        <tr>
            <th>School</th>
            <th>SRN</th>
            <th>Name</th>
            <th>Grade</th>
            <th>Enabled?</th>
            <th>Scan Range</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Students)
        {
            bool anyWholeAbsences = item.AbsenceSettings.Any(entry => entry.AbsenceType == AbsenceType.Whole);
            bool anyPartialAbsences = item.AbsenceSettings.Any(entry => entry.AbsenceType == AbsenceType.Partial);

            <tr>
                <td>@item.School</td>
                <td>@item.SRN</td>
                <td>@Html.DisplayFor(model => item.Gender, "Gender") @item.Name</td>
                <td>@Html.DisplayFor(model => item.Grade, "Grade")</td>
                <td>@Html.DisplayFor(model => anyWholeAbsences, "Boolean") Whole</td>
                <td>
                    @foreach (var entry in item.AbsenceSettings.Where(entry => entry.AbsenceType == AbsenceType.Whole))
                    {
                        <span>@entry.StartDate.ToShortDateString() - @entry.EndDate.ToShortDateString()</span>
                    }
                </td>
            </tr>
            <tr>
                <td>@item.School</td>
                <td>@item.SRN</td>
                <td>@Html.DisplayFor(model => item.Gender, "Gender") @item.Name</td>
                <td>@Html.DisplayFor(model => item.Grade, "Grade")</td>
                <td>@Html.DisplayFor(model => anyPartialAbsences, "Boolean") Partial</td>
                <td>
                    @foreach (var entry in item.AbsenceSettings.Where(entry => entry.AbsenceType == AbsenceType.Partial))
                    {
                        <span>@entry.StartDate.ToShortDateString() - @entry.EndDate.ToShortDateString()</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>