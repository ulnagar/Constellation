@page "{assetNumber}"
@model Constellation.Presentation.Staff.Areas.Staff.Pages.Equipment.Assets.DetailsModel

@inject IAuthorizationService authService

@{
    var canManageAssets = await authService.AuthorizeAsync(User, AuthPolicies.CanManageAssets);
}

<h2>Asset Details</h2>

<div class="page-menu">
    @if (canManageAssets.Succeeded)
    {
        <a asp-page="/Equipment/Assets/Upsert" asp-area="Staff" asp-route-id="@Model.AssetNumber" class="btn btn-warning">Edit</a>
    }

    <a asp-page="/Equipment/Assets/Index" asp-area="Staff" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<div class="row">
    <div class="col-md-4">
        <h3>Asset Details</h3>
        <dl>
            <dt>Asset Number</dt>
            <dd>@Model.Asset.AssetNumber</dd>

            <dt>Model</dt>
            <dd>@Model.Asset.ModelDescription (@Model.Asset.ModelNumber)</dd>

            <dt>Serial</dt>
            <dd>@Model.Asset.SerialNumber</dd>

            <dt>Status</dt>
            <dd>@Model.Asset.Status.Name</dd>

            <dt>Category</dt>
            <dd>@Model.Asset.Category.Name</dd>

        </dl>
    </div>
    
    <div class="col-md-4">
        <h3>Current Allocation Details</h3>
        <dl>
            <dt>Allocated To</dt>
            <dd>@Model.Asset.AllocatedTo</dd>
            
            <dt>Allocated On</dt>
            <dd>
                @if (Model.Asset.AllocatedOn != DateOnly.MinValue)
                {
                    <span>@Model.Asset.AllocatedOn</span>
                }
            </dd>
        </dl>
        
        <h3 class="mt-2">Current Location Details</h3>
        <dl>
            <dt>Location Category</dt>
            <dd>@Model.Asset.LocationCategory</dd>
            
            <dt>Site</dt>
            <dd>@Model.Asset.Site</dd>
            
            <dt>Room</dt>
            <dd>@Model.Asset.Room</dd>
            
            <dt>Arrival Date</dt>
            <dd>
                @if (Model.Asset.ArrivalDate != DateOnly.MinValue)
                {
                    <span>@Model.Asset.ArrivalDate</span>
                }
            </dd>
        </dl>
    </div>
</div>

<div class="row mt-2">
    <div class="col-md-4">
        <h3>Purchase Details</h3>
        <dl>
            <dt>Purchase Date</dt>
            <dd>
                @if (Model.Asset.PurchaseDate != DateOnly.MinValue)
                {
                    <span>@Model.Asset.PurchaseDate</span>
                }
            </dd>
    
            <dt>Purchase Document</dt>
            <dd>@Model.Asset.PurchaseDocument</dd>
    
            <dt>Purchase Cost</dt>
            <dd>
                @if (Model.Asset.PurchaseCost > 0)
                {
                    @Model.Asset.PurchaseCost.ToString("C")
                }
            </dd>
        </dl>
    </div>
    
    <div class="col-md-4">
        <h3>Last Sighting Details</h3>
        <dl>
            <dt>Sighted By</dt>
            <dd>@Model.Asset.SightedBy</dd>
            
            <dt>Sighted At</dt>
            <dd>
                @if (Model.Asset.SightedAt != DateTime.MinValue)
                {
                    <span>@Model.Asset.SightedAt</span>
                }
            </dd>
            
            <dt>Notes</dt>
            <dd>@Model.Asset.SightingNotes</dd>
        </dl>
    </div>
</div>

<hr />

<div>
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active" href="#allocations" data-toggle="tab" role="tab">
                Allocation History
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#locations" data-toggle="tab" role="tab">
                Location History
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#sightings" data-toggle="tab" role="tab" id="sessions-tab-button">
                Sighting History
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#notes" data-toggle="tab" role="tab">
                Notes
            </a>
        </li>
    </ul>

    <div class="tab-content">
        <div id="allocations" class="tab-pane active">
            <h3>Allocation History</h3>
            
            @if (canManageAssets.Succeeded)
            {
                if (Model.Asset.Allocations.Any(entry => entry.ReturnDate == DateOnly.MinValue))
                {
                    <button type="button" class="btn btn-warning deallocate-button">Deallocate</button>
                }
                else
                {
                    <button type="button" data-toggle="modal" data-target="#allocate-device-modal" class="btn btn-warning allocate-button">Allocate</button>
                }
            }

            <hr />

            <table class="table-striped table-hover location-data-table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>From</th>
                        <th>To</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entry in Model.Asset.Allocations.OrderByDescending(item => item.AllocationDate))
                    {
                        var returnDateSort = entry.ReturnDate != DateOnly.MinValue
                            ? entry.ReturnDate.ToString("yyyy-MM-dd")
                            : "9999-99-99";

                        var returnDateDisplay = entry.ReturnDate != DateOnly.MinValue
                            ? entry.ReturnDate.ToShortDateString()
                            : string.Empty;

                        <tr>
                            <td>@entry.UserName (@entry.AllocationType.Name)</td>
                            <td>@entry.AllocationDate</td>
                            <td data-order="@returnDateSort">@returnDateDisplay</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <div id="locations" class="tab-pane">
            <h3>Location History</h3>
            
            @if (canManageAssets.Succeeded)
            {
                <button type="button" data-toggle="modal" data-target="#transfer-asset-modal" class="btn btn-warning transfer-button">Transfer</button>
            }

            <hr />
            
            <table class="table-striped table-hover location-data-table">
                <thead>
                    <tr>
                        <th>Category</th>
                        <th>Detail</th>
                        <th>From</th>
                        <th>To</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entry in Model.Asset.Locations)
                    {
                        var departureDateSort = entry.DepartureDate != DateOnly.MinValue
                            ? entry.DepartureDate.ToString("yyyy-MM-dd")
                            : "9999-99-99";

                        var departureDateDisplay = entry.DepartureDate != DateOnly.MinValue
                            ? entry.DepartureDate.ToShortDateString()
                            : string.Empty;

                        <tr>
                            <td>@entry.Category</td>
                            <td>@entry.Site @entry.Room</td>
                            <td data-order="@entry.ArrivalDate.ToString("yyyy-MM-dd")">@entry.ArrivalDate</td>
                            <td data-order="@departureDateSort">@departureDateDisplay</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <div id="sightings" class="tab-pane">
            <h3>Sighting History</h3>
            
            @if (canManageAssets.Succeeded)
            {
                <button type="button" data-toggle="modal" data-target="#add-asset-sighting-modal" class="btn btn-warning">Add Sighting</button>
            }
            
            <hr />

            <table class="table-striped table-hover notes-data-table">
                <thead>
                    <tr>
                        <th>On</th>
                        <th>By</th>
                        <th>Note</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entry in Model.Asset.Sightings.OrderByDescending(item => item.SightedAt))
                    {
                        <tr>
                            <td data-order="@entry.SightedAt.ToString("yyyy-MM-dd HH:mm")">@entry.SightedAt</td>
                            <td>@entry.SightedBy</td>
                            <td>@entry.Note</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <div id="notes" class="tab-pane">
            <h3>Notes</h3>
            
            @if (canManageAssets.Succeeded)
            {
                <button type="button" data-toggle="modal" data-target="#add-asset-note-modal" class="btn btn-warning">Add Note</button>
            }

            <hr />

            <table class="table-striped table-hover notes-data-table">
                <thead>
                    <tr>
                        <th>On</th>
                        <th>By</th>
                        <th>Note</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entry in Model.Asset.Notes.OrderByDescending(item => item.CreatedAt))
                    {
                        <tr>
                            <td data-order="@entry.CreatedAt.ToString("yyyy-MM-dd HH:mm")">@entry.CreatedAt</td>
                            <td>@entry.CreatedBy</td>
                            <td>@Html.Raw(entry.Message.ReplaceLineEndings("<br />"))</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

<div class="modal fade" tabindex="-1" id="page-modal">
    <div class="modal-dialog">
        <div id="modal-content" class="modal-content">
        </div>
    </div>
</div>

<vc:allocate-asset />
<vc:transfer-asset />
<vc:add-asset-note />
<vc:add-asset-sighting />

@section scripts {
    <script>
        $(document).ready(function () {
            $('.notes-data-table').DataTable({ "order": [[0, 'desc']] });
            $('.location-data-table').DataTable({ "order": [[2, 'desc']] });


            $('.deallocate-button').click(function (event) {
                var xsrfHeader = $('input:hidden[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: "?handler=AjaxDeallocate",
                    type: "POST",
                    data: {
                        __RequestVerificationToken: xsrfHeader
                    }
                }).done(function (data) {
                    $('#page-modal .modal-content').html(data);
                    $('#page-modal').modal('show');
                });
            });

        });
    </script>
}