@using Constellation.Application.DTOs
@using Constellation.Application.Extensions
@model TimetableDataDto
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <style>
        .Timetable-Week {
            /*margin-top: 1rem;*/
            /*margin-left: 5%;*/
            /*border: 1px solid red;*/
            display: flex;
            flex-direction: row;
            align-items: stretch;
            align-content: stretch;
        }

        .Timetable-Day {
            /*border: 1px solid green;*/
            /*margin: 2px;*/
            display: flex;
            padding: 5px 0;
            flex-direction: column;
            align-items: stretch;
            align-content: stretch;
            width: 175px;
        }

        .Timetable-Day-Title {
            height: 20px;
            text-align: center;
            font-weight: bolder;
            margin: 2px 1px;
        }

        .Timetable-Day-Period {
            border: 1px solid green;
            height: 4rem;
            margin: 2px;
            padding: 0.5rem;
            text-align: center;
            /*width: 10vw;*/
            background-color: azure;
        }

        .Timetable-Day-Period.Inactive {
            /*background-color: cornflowerblue;*/
        }

        .Timetable-Day-Period.Active {
            background-color: darkseagreen;
            font-weight: bold;
        }

        .Timetable-Day-Period.Break {
            background-color: lightyellow;
        }

        .Timetable-Day-Period.Other {
            background-color: lightgray;
        }

        .Page {
            margin-left: 3%;
            margin-right: 3%;
        }
    </style>
</head>
<body>

    <div class="Page">
    @{
        IEnumerable<IGrouping<string, StudentTimetableDataDto.TimetableData>> timetables = new List<IGrouping<string, StudentTimetableDataDto.TimetableData>>();
        if (Model.Timetables != null)
        {
            timetables = Model.Timetables.OrderBy(data => data.TimetableName).GroupBy(data => data.TimetableName);
        }

        @foreach (var block in timetables)
        {
            var dayList = block.Select(data => data.Day).Distinct().ToList();
            var weekList = dayList.Max();
            var numWeeks = weekList / 5;
            int currentDay = 1;
            int currentWeek = 1;

            <div>
                @for (currentWeek = 1; currentWeek <= numWeeks; currentWeek++)
                {
                    if (currentWeek > 1)
                    {
                        <div style="page-break-after: always; border: none;"></div>
                    }

                    <div class="Timetable-Week">
                        <div class="Timetable-Day">
                            <div class="Timetable-Day-Title"></div>
                            @foreach (var period in block.Where(data => data.Day == currentDay).OrderBy(data => data.StartTime))
                            {
                                var style = "";

                                if (period.Type == "Other")
                                {
                                    style += " Other";
                                }

                                if (period.Type == "Break")
                                {
                                    style += " Break";
                                }

                                <div class="Timetable-Day-Period @style">
                                    @period.Name<br />
                                    @period.StartTime.As12HourTime() - @period.EndTime.As12HourTime()
                                </div>
                            }
                        </div>

                        @for (currentDay = (((currentWeek -1) * 5) + 1); currentDay <= currentWeek * 5 && currentDay > (currentWeek -1) * 5; currentDay++)
                        {
                            <div class="Timetable-Day">
                                <div class="Timetable-Day-Title">
                                    @{
                                        var weekName = currentWeek switch
                                        {
                                            1 => "Week A",
                                            2 => "Week B",
                                            3 => "Week C",
                                            4 => "Week D",
                                            _ => ""
                                        };

                                        var dayName = currentDay switch
                                        {
                                            1 or 6 or 11 or 16 => "Monday",
                                            2 or 7 or 12 or 17 => "Tuesday",
                                            3 or 8 or 13 or 18 => "Wednesday",
                                            4 or 9 or 14 or 19 => "Thursday",
                                            5 or 10 or 15 or 20 => "Friday",
                                            _ => ""
                                        };
                                    }
                                    @weekName - @dayName
                                </div>
                                @foreach (var period in block.Where(data => data.Day == currentDay).OrderBy(data => data.StartTime))
                                {
                                    var style = "";

                                    if (string.IsNullOrWhiteSpace(period.ClassName))
                                    {
                                        style += " Inactive";
                                    } else
                                    {
                                        style += " Active";
                                    }

                                    if (period.Type == "Break")
                                    {
                                        style += " Break";
                                    }
                                    
                                    <div class="Timetable-Day-Period @style">
                                        @if (!string.IsNullOrWhiteSpace(period.ClassName))
                                        {
                                                @period.ClassName<br />
                                                @period.ClassTeacher
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        }
    }
    </div>

</body>
</html>