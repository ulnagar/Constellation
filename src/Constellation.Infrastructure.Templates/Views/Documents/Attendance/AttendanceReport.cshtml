@model AttendanceReportViewModel

@using Constellation.Infrastructure.Templates.Views.Documents.Attendance

@{
    Layout = null;

    var dateData = Model.DateData.OrderBy(d => d.Date).ToList();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <style>
        body {
            font-size: 16px;
        }

        .mt-2 {
            margin-top: 0.5em;
        }

        .mt-3 {
            margin-top: 1em;
        }

        .mt-4 {
            margin-top: 1.25em;
        }

        .w-25 {
            width: 25%;
        }

        td.app-card {
            padding: 1rem .25rem .25rem .5rem;
            vertical-align: top;
            border-bottom: 1px solid;
        }

        tr th {
            width: 30%;
        }

        tr td {
            width: 70%;
        }

        tr td, tr th {
            padding: 1em;
            border: 1px solid;
        }

        th {
            text-align: left;
        }

        .table-roll {
            width: 95%;
            font-size: 12px;
            border: 1px solid;
            border-collapse: collapse;
        }

        .offset-1 {
            margin-left: 5%;
        }

        .col-10 {
            -ms-flex: 0 0 83.333333%;
            flex: 0 0 83.333333%;
            /*max-width: 83.333333%*/
        }

        .row {
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            margin-right: -15px;
            margin-left: -15px
        }

        .logo {
            width: 50%;
            margin-top: 1.5em;
            margin-right: 5%;
        }

        .right-align {
            text-align: right;
        }

        .heading-row {
            display: block;
            font-weight: bold;
            text-align: center;
            margin-left: 6.25%;
            margin-top: 1.5em;
        }

        .legend {
            display: block;
            margin-left: 6.25%;
        }

        .legend-box {
            float: left;
            padding-right: 1.5em;
        }
    </style>
</head>
<body>
    @for (int i = 0; i < dateData.Count; i++)
    {
        var weekIndex = (i * 5);
        if (weekIndex >= dateData.Count)
        {
            continue;
        }
        var week = dateData[weekIndex];
        var weekName = (week.DayNumber == 1) ? "Week A" : "Week B";

        if (i > 0)
        {
            <div style="page-break-after: always; border: none;"></div>
        }

        <div class="row">
            <div class="heading-row">Legend:</div>
            <div class="legend">
                <div class="legend-box">
                    <img src="@AttendanceReportViewModel.GreenLightIcon" height="50px" width="50px" />
                    All Absences Explained
                </div>
                <div class="legend-box">
                    <img src="@AttendanceReportViewModel.YellowLightIcon" height="50px" width="50px" />
                    Some Absences Explained
                </div>
                <div class="legend-box">
                    <img src="@AttendanceReportViewModel.RedLightIcon" height="50px" width="50px" />
                    No Absences Explained
                </div>
            </div>
        </div>

        <div class="row">
            <div class="offset-1 col-10">
                <h2>@weekName</h2>
            </div>

            @for (int k = 0; k < 5; k++)
            {
                var index = (i * 5) + k;
                if (index >= dateData.Count)
                {
                    continue;
                }

                var entry = dateData[index];

                <div class="offset-1 col-10" style="page-break-inside: avoid">
                    <h4>@entry.Date.ToLongDateString()</h4>

                    @if (Model.ExcludedDates.Contains(entry.Date))
                    {
                        <h4>@entry.Date.ToLongDateString()</h4>
                        <span>Non Teaching Day</span>
                    }
                    else if (!entry.Sessions.Any())
                    {
                        <span>No classes scheduled this day</span>
                    }
                    else
                    {
                        <table class="mt-3 table-roll">
                            @foreach (var group in entry.Sessions)
                            {
                                var periodAbsences = Model.Absences
                                    .Where(a => 
                                        a.Date == entry.Date && 
                                        a.OfferingId == group.OfferingId)
                                    .ToList();
                                
                                <tr>
                                    <th>
                                        @group.PeriodName<br/>
                                        @group.PeriodTimeframe<br/>
                                        @group.OfferingName<br/>
                                        <span style="white-space: nowrap">@group.CourseName</span>
                                    </th>
                                    <td>
                                        @if (periodAbsences.Any())
                                        {
                                            foreach (var absence in periodAbsences.OrderBy(a => a.StartTime))
                                            {
                                                <strong>@absence.Type (@absence.AbsenceTimeframe) - @absence.AbsenceReason</strong>

                                                @Html.Raw(absence.Explanation)
                                            }
                                        }
                                        else
                                        {
                                            <strong>Student was marked present for the entire lesson</strong>
                                        }
                                    </td>
                                    <td>
                                        @if (periodAbsences.All(a => a.Explained))
                                        {
                                            <img src="@AttendanceReportViewModel.GreenLightIcon" height="50px" width="50px" />
                                        }
                                        else if (periodAbsences.All(a => !a.Explained))
                                        {
                                            <img src="@AttendanceReportViewModel.RedLightIcon" height="50px" width="50px" />
                                        }
                                        else
                                        {
                                            <img src="@AttendanceReportViewModel.YellowLightIcon" height="50px" width="50px" />
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                </div>
            }
        </div>
    }
</body>
</html>