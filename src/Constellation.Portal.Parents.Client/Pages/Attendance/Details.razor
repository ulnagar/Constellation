@page "/Attendance/Details/{id:guid}"

@using Constellation.Application.Features.Attendance.Queries;

@inject HttpClient Http

@attribute [Authorize]

<div class="d-grid gap-2 d-block d-sm-block d-md-block d-lg-none d-xl-none d-xxl-none mb-1">
    <a href="attendance" class="btn btn-primary"><i class="fas fa-long-arrow-left" /> Go Back</a>
</div>

<div class="d-none d-lg-block d-xl-block d-xxl-block mb-1">
    <a href="attendance" class="btn btn-primary"><i class="fas fa-long-arrow-left" /> Go Back</a>
</div>

<h3>@Absence.Type absence for @Absence.StudentName</h3>

<div>
    Date: @Absence.Date.ToShortDateString()
</div>

<div>
    Class: @Absence.OfferingName
</div>

<div>
    Absence: @Absence.AbsenceTimeframe
</div>

<div>
    @if(string.IsNullOrWhiteSpace(Absence.Reason)){
        //Form
        <input type="text" placeholder="Absence Reason" />
    } else {
        <span>Reason: @Absence.Reason</span>
    }
</div>

@code {
    [Parameter] public Guid Id { get; set; }

    internal AbsenceDetailDto Absence { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            Absence = await Http.GetFromJsonAsync<AbsenceDetailDto>($"Attendance/Details/{Id}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}
