@page "/Awards/"

@using Constellation.Application.Awards.GetSummaryForStudent;
@using Constellation.Application.Features.Partners.Students.Queries

@inject HttpClient Http

@attribute [Authorize]

<Loader IsLoading="ShowLoader">
    <h2>Student Awards</h2>

    @if (SelectingStudent)
    {
        // Show list of students in boxes to allow them to select a different student
        <h4>Select student to display:</h4>
        <ul class="list-group">
            @foreach (var student in Students)
            {
                <button class="list-group-item list-group-item-action @(student == SelectedStudent ? "active" : "")" @onclick="() => SelectNewStudent(student)">
                    @student.DisplayName (@student.CurrentGrade)
                </button>
            }
        </ul>
    } 
    else
    {
        <div class="w-auto p-2 ms-1 me-1 mb-2 position-relative border border-2 rounded-3">
            <span class="row d-flex align-items-center">
                @*Display as flex to enable vertical centering of the button in the second div*@
                <div class="col-lg">
                    <div class="h4">Awards for @SelectedStudent.DisplayName</div>
                    @*If the view has collapsed and the button below is hidden, turn the entire entry into a clickable element*@
                    @if (Students.Count > 1)
                    {
                        <span class="fst-italic">Click or tap to change</span>

                        <div class="d-block">
                            <a @onclick="EnableStudentSelection" href="javascript:void(0)" class="stretched-link"></a>
                        </div>
                    }
                </div>
            </span>
        </div>

        <div class="row mt-3">
            <h4>Award Tally</h4>

            <div class="p-2 ms-1 me-1 mb-2 position-relative border border-2 rounded-3">
                <span class="row d-flex align-items-center">
                    @*Display as flex to enable vertical centering of the button in the second div*@
                    <div class="fa-icon-sizing">
                        <i class="fad fa-star-shooting fa-3x app-theme"></i>
                    </div>
                    <div class="col">
                        <div class="h4">@AwardSummary.Astras Astra awards</div>
                        <span class="fst-italic">Astra awards are given out by classroom teachers.</span>
                    </div>
                </span>
            </div>

            <div class="p-2 ms-1 me-1 mb-2 position-relative border border-2 rounded-3">
                <span class="row d-flex align-items-center">
                    @*Display as flex to enable vertical centering of the button in the second div*@
                    <div class="fa-icon-sizing">
                        <i class="fad fa-star-christmas fa-3x app-theme"></i>
                    </div>
                    <div class="col">
                        <div class="h4">@AwardSummary.Stellars Stellar awards</div>
                        <span class="fst-italic">5 Astra awards = 1 Stellar award.</span>
                    </div>
                </span>
            </div>

            <div class="p-2 ms-1 me-1 mb-2 position-relative border border-2 rounded-3">
                <span class="row d-flex align-items-center">
                    @*Display as flex to enable vertical centering of the button in the second div*@
                    <div class="fa-icon-sizing">
                        <i class="fad fa-solar-system fa-3x app-theme"></i>
                    </div>
                    <div class="col">
                        <div class="h4">@AwardSummary.Galaxies Galaxy medals</div>
                        <span class="fst-italic">5 Stellar awards = 1 Galaxy Medal.</span>
                    </div>
                </span>
            </div>

            <div class="p-2 ms-1 me-1 mb-2 position-relative border border-2 rounded-3">
                <span class="row d-flex align-items-center">
                    @*Display as flex to enable vertical centering of the button in the second div*@
                    <div class="fa-icon-sizing">
                        <i class="fad fa-galaxy fa-3x app-theme"></i>
                    </div>
                    <div class="col">
                        <div class="h4">@AwardSummary.Universals Universal Achiever awards</div>
                        <span class="fst-italic">5 Galaxy medals = 1 Universal Achiever award.</span>
                    </div>
                </span>
            </div>
        </div>

        <div class="row mt-3">
            <h4>Recent Award List</h4>

            @foreach (var award in AwardSummary.RecentAwards.OrderByDescending(award => award.AwardedOn).ToList())
            {
                <div class="p-2 ms-1 me-1 mb-2 position-relative border border-2 rounded-3">
                    <span class="row d-flex align-items-center">
                        <div class="col">
                            <div class="h4">@award.Type</div>
                            @if (!string.IsNullOrEmpty(award.AwardedBy))
                            {
                                <span class="fst-italic">Awarded By @award.AwardedBy</span>
                            }

                            @if (!string.IsNullOrEmpty(award.AwardedFor))
                            {
                                <span class="fst-italic">For @award.AwardedFor</span>
                            }

                            <span class="fst-italic">On @award.AwardedOn.ToShortDateString()</span>
                        </div>
                    </span>
                </div>
            }
        </div>
    }
</Loader>

@code {
    public List<StudentOfParent> Students { get; set; } = new();
    public StudentOfParent SelectedStudent { get; set; } = new();
    public StudentAwardSummaryResponse AwardSummary { get; set; } = new(0, 0, 0, 0, new());

    public bool ShowLoader = false;
    public bool SelectingStudent = false;

    protected override async Task OnParametersSetAsync()
    {
        ShowLoader = true;

        try
        {
            Students = await Http.GetFromJsonAsync<List<StudentOfParent>>($"Students");
            Students = Students.OrderBy(student => student.CurrentGrade).ToList();

            if (Students.Count == 1)
            {
                SelectedStudent = Students.First();
                AwardSummary = await Http.GetFromJsonAsync<StudentAwardSummaryResponse>($"Awards/Student/{SelectedStudent.StudentId}");
            }

            if (Students.Count > 1)
            {
                SelectingStudent = true;
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        ShowLoader = false;
    }

    void EnableStudentSelection()
    {
        SelectingStudent = true;
    }

    async void SelectNewStudent(StudentOfParent student)
    {
        ShowLoader = true;

        SelectedStudent = student;
        SelectingStudent = false;

        try
        {
            AwardSummary = await Http.GetFromJsonAsync<StudentAwardSummaryResponse>($"Awards/Student/{SelectedStudent.StudentId}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        ShowLoader = false;

        StateHasChanged();
    }
}
