@page "/Contacts/Create"

@using Blazored.FluentValidation
@using Constellation.Application.Features.Partners.SchoolContacts.Commands
@using Constellation.Core.Models;

@attribute [Authorize]

@inject HttpClient Http
@inject NavigationManager NavigationManager

<Loader IsLoading="@IsLoading">
    <h2>New School Contact</h2>

    <div class="form-horizontal">
        <EditForm Model="Command" OnValidSubmit="SubmitResponse">
            <FluentValidationValidator />
            <ValidationSummary />

            <div class="mb-3 row">
                <label class="form-label col-md-2">First Name</label>
                <div class="col-md-3">
                    <InputText @bind-Value="Command.FirstName" class="form-control" />
                </div>
            </div>

            <div class="mb-3 row">
                <label class="form-label col-md-2">Last Name</label>
                <div class="col-md-3">
                    <InputText @bind-Value="Command.LastName" class="form-control" />
                </div>
            </div>

            <div class="mb-3 row">
                <label class="form-label col-md-2">Phone Number</label>
                <div class="col-md-3">
                    <InputText @bind-Value="Command.PhoneNumber" class="form-control" />
                </div>
            </div>

            <div class="mb-3 row">
                <label class="form-label col-md-2">Email Address</label>
                <div class="col-md-3">
                    <InputText @bind-Value="Command.EmailAddress" class="form-control" placeholder="john.smith1@det.nsw.edu.au" />
                </div>
            </div>

            <div class="mb-3 row">
                <label class="form-label col-md-2">Phone Number</label>
                <div class="col-md-3">
                    <select @bind="Command.Position" class="form-control">
                        <option value="">-- Select --</option>
                        <option value="@SchoolContactRole.Principal">@SchoolContactRole.Principal</option>
                        <option value="@SchoolContactRole.Coordinator">@SchoolContactRole.Coordinator</option>
                        <option value="@SchoolContactRole.SciencePrac">@SchoolContactRole.SciencePrac</option>
                    </select>
                </div>
            </div>

            <div class="mb-3 row">
                <label class="form-label col-md-2">School</label>
                <div class="col-md-3">
                    @SelectedSchool.Name
                </div>
            </div>

            <div class="mb-3 row">
                <div class="offset-1 col-md-3">
                    <button class="btn btn-success btn-block btn-lg" type="submit">Submit</button>
                </div>
                <div class="col-md-1 ms-3">
                    <button class="btn btn-danger btn-block btn-lg" @onclick="Cancel">Cancel</button>
                </div>
            </div>
        </EditForm>
    </div>
</Loader>

@code {
    [CascadingParameter]
    public SchoolDto SelectedSchool { get; set; }
    public SchoolDto CurrentlySelectedSchool { get; set; }

    private bool IsLoading { get; set; } = false;

    public CreateNewSchoolContactWithRoleCommand Command { get; set; } = new();

    protected override void OnParametersSet()
    {
        IsLoading = true;

        // Is this the first time the page has rendered?
        // (Selected Site School exists) and (Page School is not Selected Site School) and (Page School is empty)
        if (SelectedSchool != null && CurrentlySelectedSchool != SelectedSchool && CurrentlySelectedSchool == null)
        {
            CurrentlySelectedSchool = SelectedSchool;
        }

        // Has the school been changed at the site level?
        // (Selected Site School exists) and (Page School is not Selected Site School) and (Page School is no empty)
        if (SelectedSchool != null && CurrentlySelectedSchool != SelectedSchool && CurrentlySelectedSchool != null)
        {
            NavigationManager.NavigateTo("Contacts");
        }

        Command = new();
        Command.SchoolCode = SelectedSchool.Code;

        IsLoading = false;
    }

    private void Cancel() => NavigationManager.NavigateTo("Contacts");

    private async Task SubmitResponse()
    {
        IsLoading = true;

        await Http.PostAsJsonAsync<CreateNewSchoolContactWithRoleCommand>($"api/Contacts/New", Command);

        IsLoading = false;

        NavigationManager.NavigateTo("Contacts");
    }
}
