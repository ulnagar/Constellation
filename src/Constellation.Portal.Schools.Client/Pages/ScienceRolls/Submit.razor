@page "/ScienceRolls/{LessonId:guid}/{RollId:guid}/Submit"
@using Constellation.Application.SciencePracs.GetLessonRollSubmitContextForSchoolsPortal;
@using Constellation.Application.SciencePracs.SubmitRoll;
@using Constellation.Core.Models.Identifiers;

@attribute [Authorize]

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<Loader IsLoading="@IsLoading">
    <h2>Science Practical Roll</h2>

    <div class="mt-3">
        <div class="form-horizontal">
            <EditForm Model="Roll" OnValidSubmit="SubmitResponse">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3 row">
                    <div class="col-md-8 alert alert-warning">
                        Please note that this document:
                        <ul>
                            <li>constitutes a class roll under the Education Act 1990, </li>
                            <li>must be an accurate record of what happened during the lesson, </li>
                            <li>can be subpoenaed into court records, and</li>
                            <li>is registered as being submitted by you, with your DoE email address attached.</li>
                        </ul>
                        You must ensure that all details you record here are correct and accurately reflect the delivery of the lesson.
                    </div>
                </div>

                <div class="mb-3 row">
                    <label class="form-label col-md-2">Lesson Name</label>
                    <div class="col-md-6">@Roll.LessonName</div>
                </div>

                <div class="mb-3 row">
                    <label class="form-label col-md-2">Due Date</label>
                    <div class="col-md-6">@Roll.LessonDueDate.ToShortDateString()</div>
                </div>

                <div class="mb-3 row">
                    <label class="form-label col-md-2">Date Delivered</label>
                    <div class="col-md-6">
                        <InputDate @bind-Value="Roll.LessonDate" />
                    </div>
                </div>

                <div class="mb-3 row">
                    <label class="form-label col-md-2">Comment</label>
                    <div class="col-md-6">
                        <InputTextArea @bind-Value="Roll.Comment" rows="3" cols="100" class="form-control" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-8">
                        <table class="table">
                            <thead>
                            <tr>
                                <td class="col-md-4"><label>Name</label></td>
                                <td><label>Present?</label></td>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var student in Roll.Attendance)
                            {
                                <tr>
                                    <td><span class="control-label text-only">@student.StudentName</span></td>
                                    <td>
                                        <span class="control-label text-only">
                                            @*<InputCheckbox @bind-Value="student.Present" />*@
                                            <Toggle @bind-Value="student.Present" @bind-Value:event="ValueChanged" />
                                        </span>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                    <div class="col-md-3 alert alert-warning ">
                        Ticking a student in this list indicates the student was <strong>present</strong> for the lesson.
                    </div>
                </div>

                <div class="mb-3 row">
                    <div class="offset-1 col-md-3">
                        <button class="btn btn-success btn-block btn-lg" type="submit">Submit</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</Loader>

@code {
    [CascadingParameter]
    public SchoolDto SelectedSchool { get; set; }
    public SchoolDto CurrentlySelectedSchool { get; set; }

    private bool IsLoading { get; set; } = false;

    [Parameter]
    public Guid RollId { get; set; }
    public Guid CurrentRollId { get; set; }

    [Parameter]
    public Guid LessonId { get; set; }

    public ScienceLessonRollForSubmit Roll { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        IsLoading = true;

        if (SelectedSchool != null && CurrentlySelectedSchool != SelectedSchool && CurrentlySelectedSchool == null)
        {
            CurrentlySelectedSchool = SelectedSchool;
        }

        if (SelectedSchool != null && CurrentlySelectedSchool != SelectedSchool && CurrentlySelectedSchool != null)
        {
            NavigationManager.NavigateTo("ScienceRolls");
        }

        if (RollId != Guid.Empty && RollId != CurrentRollId)
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            CurrentRollId = RollId;

            Roll = await Http.GetFromJsonAsync<ScienceLessonRollForSubmit>($"api/Rolls/ForSubmit/{RollId}?lessonId={LessonId}");
        }

        IsLoading = false;
    }

    public async Task SubmitResponse()
    {
        IsLoading = true;

        List<string> presentStudents = Roll.Attendance
            .Where(entry => entry.Present)
            .Select(entry => entry.StudentId)
            .ToList();

        List<string> absentStudents = Roll.Attendance
            .Where(entry => !entry.Present)
            .Select(entry => entry.StudentId)
            .ToList();

        SciencePracLessonId lessonId = SciencePracLessonId.FromValue(LessonId);
        SciencePracRollId rollId = SciencePracRollId.FromValue(RollId);

        SubmitRollCommand command = new(
            lessonId,
            rollId,
            Roll.LessonDate,
            Roll.Comment,
            presentStudents,
            absentStudents);

        await Http.PostAsJsonAsync<SubmitRollCommand>($"api/Rolls/Submit/{RollId}?lessonId={LessonId}", command);

        IsLoading = false;

        NavigationManager.NavigateTo("ScienceRolls");
    }
}