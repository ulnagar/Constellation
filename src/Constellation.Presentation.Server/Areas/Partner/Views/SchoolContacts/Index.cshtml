@model SchoolStaff_ViewModel

@using Constellation.Application.Models.Auth
@using Constellation.Core.Enums

@{
    var authorised = (User.IsInRole(AuthRoles.Editor) || User.IsInRole(AuthRoles.Admin));
}

<h2>School Contacts</h2>

<div>
    <div class="btn-group" role="group">
        <a asp-action="All" asp-controller="SchoolContacts" asp-area="Partner" class="btn btn-secondary">All Contacts</a>
    </div>

    <div class="btn-group" role="group">
        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown">For Grade <span class="caret"></span></button>
        <div class="dropdown-menu">
            @{
                var grades = Enum.GetValues(typeof(Grade));
                foreach (var grade in grades)
                {
                    <a asp-action="FromGrade" asp-controller="SchoolContacts" asp-area="Partner" asp-route-id="@grade" class="dropdown-item">Year @(((int)grade).ToString("D2"))</a>
                }
            }
        </div>
    </div>

    <div class="btn-group" role="group">
        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown">With Role <span class="caret"></span></button>
        <div class="dropdown-menu">
            @{
                foreach (var role in Model.RoleList)
                {
                    <a asp-action="WithRole" asp-controller="SchoolContacts" asp-area="Partner" asp-route-role="@role" class="dropdown-item">@role</a>
                }
            }
        </div>
    </div>

    @if (authorised)
    {
        <div class="btn-group" role="group">
            <a asp-action="Create" asp-controller="SchoolContacts" asp-area="Partner" class="btn btn-info">Create New</a>
        </div>
    }
</div>

<hr />

<table class="table-striped table-hover data-table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Phone Number</th>
            <th>Role</th>
            <th>School</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Contacts)
        {
            <tr>
                <td class="text-nowrap">@Html.DisplayFor(model => item.Name)</td>
                <td>@Html.DisplayFor(model => item.EmailAddress, "EmailAddress")</td>
                <td class="text-nowrap">@Html.DisplayFor(model => item.PhoneNumber, "PhoneNumber")</td>
                <td>@Html.DisplayFor(model => item.Role)</td>
                <td>@Html.DisplayFor(model => item.SchoolName)</td>
                <td>
                    @if (authorised)
                    {
                        <div class="btn-group" role="group">
                            <button id="btnGroupDrop1" type="button" class="btn btn-warning dropdown-toggle btn-show-hover" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
                            <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                <a asp-action="Update" asp-controller="SchoolContacts" asp-area="Partner" asp-route-id="@item.Id.Value" class="dropdown-item">Edit Contact</a>
                                <a asp-action="AddAssignment" asp-controller="SchoolContacts" asp-area="Partner" asp-route-id="@item.Id.Value" class="dropdown-item">Add Role</a>
                                @if (!string.IsNullOrEmpty(item.Role))
                                {
                                    <a asp-action="DeleteAssignment" asp-controller="SchoolContacts" asp-area="Partner" asp-route-contactGuid="@item.Id.Value" asp-route-roleGuid="@item.AssignmentId.Value" class="dropdown-item">Remove Role</a>
                                }
                                <div class="dropdown-divider"></div>
                                <a asp-action="RepairUserAccount" asp-controller="SchoolContacts" asp-area="Partner" asp-route-id="@item.Id" class="dropdown-item">Repair Account</a>
                            </div>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

