@page
@model Constellation.Presentation.Server.Areas.Partner.Pages.Contacts.IndexModel

@using Constellation.Application.Contacts.GetContactList;
@using Constellation.Application.Extensions
@using Constellation.Core.Enums;

<h2>Contacts List</h2>

<div class="page-menu">
    <button type="button" class="btn btn-warning" data-toggle="collapse" data-target="#filterDefinition" aria-expanded="false" aria-controls="filterDefinition">Show Filter</button>
    <button id="SubmitFormAsExport" class="btn btn-warning">Export Current Filter</button>
    <button id="SendEmail" class="btn btn-warning">Send Email</button>
</div>

<hr />

<div id="filterDefinition" class="collapse">
    <form asp-page-handler="Filter" method="post" id="filterForm">
        <input type="hidden" name="Filter.Action" id="filterAction" />
        <div class="row">
            <div class="col-md-10">
                <div class="row nested-row">
                    <div class="col-md-6">
                        <label asp-for="Filter.Grades">Grades</label>
                        <div id="SelectedGradesList"> </div>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Filter.Grades">Schools</label>
                        <div id="SelectedSchoolsList"> </div>
                    </div>
                </div>
                <div class="row nested-row">
                    <div class="col-md-6">
                        <label asp-for="Filter.Grades">Classes</label>
                        <div id="SelectedClassesList"> </div>

                    </div>
                    <div class="col-md-6">
                        <label asp-for="Filter.Categories">Contact Categories</label>
                        <div id="SelectedCategoriesList"> </div>

                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <button id="ShowGradeSelectList" type="button" class="btn btn-primary btn-block">Add Grades</button>
                <button id="ShowSchoolSelectList" type="button" class="btn btn-primary btn-block">Add Schools</button>
                <button id="ShowClassSelectList" type="button" class="btn btn-primary btn-block">Add Classes</button>
                <button id="ShowCategorySelectList" type="button" class="btn btn-primary btn-block">Add Categories</button>

                <button id="SubmitFormAsFilter" type="button" class="btn btn-success btn-block mt-3">Filter</button>
            </div>
        </div>
    </form>
</div>

<hr />

<table class="table table-striped table-hover custom-data-table">
    <thead>
        <tr>
            <th>Student Name</th>
            <th></th>
            <th></th>
            <th>Contact Name</th>
            <th>Contact Email</th>
            <th>Contact Phone</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var contact in Model.Contacts)
        {
            <tr>
                <td>@contact.Student.DisplayName (@contact.StudentGrade.AsName())</td>
                <td>@{
                        if (contact.Category.Value.Contains("PartnerSchool"))
                        {
                            <i class="fal fa-school" title="Partner School"></i>
                        }

                        if (contact.Category.Value.Contains("NonResidential"))
                        {
                            <i class="fal fa-house-damage" title="Non-Residential Family"></i>
                        }

                        if (contact.Category.Value.Contains(".Residential"))
                        {
                            <i class="fal fa-house" title="Residential Family"></i>
                        }

                        if (contact.Category.Value.Contains("Student"))
                        {
                            <i class="fal fa-child" title="Student"></i>
                        }
                    }
                </td>
                <td>@{
                        if (contact.Category.Value.Contains(".Family"))
                        {
                            //<i class="fal fa-house-leave" title="Family Contact"></i>
                            @:Family
                        }

                        if (contact.Category.Value.Contains(".Mother"))
                        {
                            //<i class="fal fa-female" title="Mother"></i>
                            @:Mother
                        }

                        if (contact.Category.Value.Contains(".Father"))
                        {
                            //<i class="fal fa-male" title="Father"></i>
                            @:Father
                        }

                        if (contact.Category.Value.Contains(".Parent"))
                        {
                            //<i class="fal fa-restroom" title="Parent"></i>
                            @:Parent
                        }

                        if (contact.Category.Value.Contains(".School"))
                        {
                            //<i class="fal fa-chalkboard-teacher" title="School"></i>
                            @:School
                        }

                        if (contact.Category.Value.Contains(".Principal"))
                        {
                            //<i class="fal fa-restroom" title="Principal"></i>
                            @:Principal
                        }

                        if (contact.Category.Value.Contains(".AuroraCollegeCoordinator"))
                        {
                            //<i class="fal fa-restroom" title="ACC"></i>
                            @:ACC
                        }

                        if (contact.Category.Value.Contains(".SciencePracticalTeacher"))
                        {
                            //<i class="fal fa-restroom" title="SPT"></i>
                            @:SPT
                        }

                        if (contact.Category.Value.Contains(".OtherStaff"))
                        {
                            //<i class="fal fa-restroom" title="Other Staff"></i>
                            @:Other Staff
                        }
                    }
                </td>
                <td>@contact.Contact</td>
                <td>@contact.ContactEmail.Email</td>
                <td>@contact.ContactPhone?.ToString()</td>
            </tr>
        }
    </tbody>
</table>

<div class="modal" id="GradeListModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Grades for Filter</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <h5 class="col-md-12">Selected Grades:</h5>
                        <div class="col-md-12" id="ModalSelectedGradesList"> </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Primary</h5>
                        </div>
                        <div class="col">
                            <button id="gradeSelect-@Grade.Y05" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y05')">@Grade.Y05.AsName()</button>
                            <button id="gradeSelect-@Grade.Y06" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y06')">@Grade.Y06.AsName()</button>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Junior Secondary</h5>
                        </div>
                        <div class="col">
                            <button id="gradeSelect-@Grade.Y07" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y07')">@Grade.Y07.AsName()</button>
                            <button id="gradeSelect-@Grade.Y08" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y08')">@Grade.Y08.AsName()</button>
                            <button id="gradeSelect-@Grade.Y09" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y09')">@Grade.Y09.AsName()</button>
                            <button id="gradeSelect-@Grade.Y10" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y10')">@Grade.Y10.AsName()</button>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Senior Secondary</h5>
                        </div>
                        <div class="col">
                            <button id="gradeSelect-@Grade.Y11" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y11')">@Grade.Y11.AsName()</button>
                            <button id="gradeSelect-@Grade.Y12" type="button" class="btn btn-outline-info select-button" onClick="toggleGrade('@Grade.Y12')">@Grade.Y12.AsName()</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="SchoolListModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Schools for Filter</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="form-group col">
                            <span class="control-label">School</span>
                            <select asp-items="@(new SelectList(Model.SchoolsList, "Code", "Name"))" id="custom-combo" style="width:100%">
                                <option value="">-- Select --</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <h5 class="col-md-12">Selected Schools:</h5>
                        <div class="col-md-12" id="ModalSelectedSchoolsList"> </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="ClassListModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Classes for Filter</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <h5 class="col-md-12">Selected Classes:</h5>
                        <div class="col-md-12" id="ModalSelectedClassesList"> </div>
                    </div>
                    @foreach (var grade in Model.ClassSelectionList.OrderBy(entry => entry.Grade).ThenBy(entry => entry.Name).GroupBy(entry => entry.Grade))
                    {
                        <div class="row">
                            <div class="col-md-2">
                                <h5>@grade.Key</h5>
                            </div>
                            <div class="col">
                                @foreach (var offering in grade)
                                {
                                    <button id="offeringSelect-@offering.Id" class="btn btn-outline-info select-button" onClick="toggleClass(@offering.Id)">@offering.Name (@offering.Teacher)</button>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="CategoryListModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Categories for Filter</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <h5 class="col-md-12">Selected Categories:</h5>
                        <div class="col-md-12" id="ModalSelectedCategoriesList"> </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Student</h5>
                        </div>
                        <div class="col">
                            <button id="categorySelect-@ContactCategory.Student.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.Student.Value')">@ContactCategory.Student.Name</button>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Residential Family</h5>
                        </div>
                        <div class="col">
                            <button id="categorySelect-@ContactCategory.ResidentialFamily.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.ResidentialFamily.Value')">@ContactCategory.ResidentialFamily.Name</button>
                            <button id="categorySelect-@ContactCategory.ResidentialMother.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.ResidentialMother.Value')">@ContactCategory.ResidentialMother.Name</button>
                            <button id="categorySelect-@ContactCategory.ResidentialFather.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.ResidentialFather.Value')">@ContactCategory.ResidentialFather.Name</button>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Non-Residential Family</h5>
                        </div>
                        <div class="col">
                            <button id="categorySelect-@ContactCategory.NonResidentialFamily.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.NonResidentialFamily.Value')">@ContactCategory.NonResidentialFamily.Name</button>
                            <button id="categorySelect-@ContactCategory.NonResidentialParent.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.NonResidentialParent.Value')">@ContactCategory.NonResidentialParent.Name</button>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <h5>Partner School</h5>
                        </div>
                        <div class="col">
                            <button id="categorySelect-@ContactCategory.PartnerSchoolSchool.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.PartnerSchoolSchool.Value')">@ContactCategory.PartnerSchoolSchool.Name</button>
                            <button id="categorySelect-@ContactCategory.PartnerSchoolPrincipal.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.PartnerSchoolPrincipal.Value')">@ContactCategory.PartnerSchoolPrincipal.Name</button>
                            <button id="categorySelect-@ContactCategory.PartnerSchoolACC.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.PartnerSchoolACC.Value')">@ContactCategory.PartnerSchoolACC.Name</button>
                            <button id="categorySelect-@ContactCategory.PartnerSchoolSPT.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.PartnerSchoolSPT.Value')">@ContactCategory.PartnerSchoolSPT.Name</button>
                            <button id="categorySelect-@ContactCategory.PartnerSchoolOtherStaff.Value" type="button" class="btn btn-outline-info select-button" onClick="toggleCategory('@ContactCategory.PartnerSchoolOtherStaff.Value')">@ContactCategory.PartnerSchoolOtherStaff.Name</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="hidden">
    @foreach (var school in Model.SchoolsList)
    {
        <button id="schoolSelect-@school.Code" type="button" class="btn btn-outline-info select-button" onClick="toggleSchool('@school.Code')">@school.Name</button>
    }
</div>


@section scripts {
    <script>
        $('#ShowGradeSelectList').on('click', function () {
            $('#GradeListModal').modal('show');
        });

        $('#ShowCategorySelectList').on('click', function () {
            $('#CategoryListModal').modal('show');
        });

        $('#ShowClassSelectList').on('click', function () {
            $('#ClassListModal').modal('show');
        });

        $('#ShowSchoolSelectList').on('click', function () {
            $('#SchoolListModal').modal('show');
        });

        $('#SubmitFormAsFilter').on('click', function() {
            $('#filterAction').val(0);
            $('#filterForm').submit();
        });

        $('#SubmitFormAsExport').on('click', function () {
            $('#filterAction').val(1);
            $('#filterForm').submit();
        });

        var $schoolOption = $("#custom-combo").select2({ theme: 'bootstrap' });

        $schoolOption.on('select2:select', function(e) {
            var code = e.params.data.id;
            toggleSchool(code);
        });

        $schoolOption.on('select2:unselect', function(e) {
            var code = e.params.data.id;
            toggleSchool(code);
        });

        function toggleGrade(grade) {
            var selectDiv = $('#gradeSelect-' + grade);
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('#pd-gradeSelect-' + grade).remove();
                $('#md-gradeSelect-' + grade).remove();
                $('#i-gradeSelect-' + grade).remove();
            }
            else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info')

                var pageDisplayDiv = $('#gradeSelect-' + grade).clone().prop('id', 'pd-gradeSelect-' + grade);
                pageDisplayDiv.appendTo('#SelectedGradesList');
                var modalDisplayDiv = $('#gradeSelect-' + grade).clone().prop('id', 'md-gradeSelect-' + grade);
                modalDisplayDiv.appendTo('#ModalSelectedGradesList');

                var input = $('<input>').attr('id', 'i-gradeSelect-' + grade)
                    .attr('name', 'Filter.Grades')
                    .attr('type', "hidden");
                input.val(grade);
                var classInputDiv = $('#SelectedGradesList');
                classInputDiv.append(input);
            }
        }

        function toggleSchool(code) {
            var selectDiv = $('#schoolSelect-' + code);
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('#pd-schoolSelect-' + code).remove();
                $('#md-schoolSelect-' + code).remove();
                $('#i-schoolSelect-' + code).remove();
            }
            else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info')

                var pageDisplayDiv = $('#schoolSelect-' + code).clone().prop('id', 'pd-schoolSelect-' + code);
                pageDisplayDiv.appendTo('#SelectedSchoolsList');
                var modalDisplayDiv = $('#schoolSelect-' + code).clone().prop('id', 'md-schoolSelect-' + code);
                modalDisplayDiv.appendTo('#ModalSelectedSchoolsList');

                var input = $('<input>').attr('id', 'i-schoolSelect-' + code)
                    .attr('name', 'Filter.Schools')
                    .attr('type', "hidden");
                input.val(code);
                var classInputDiv = $('#SelectedSchoolsList');
                classInputDiv.append(input);
            }
        }

        function toggleClass(offeringId) {
            var selectDiv = $('#offeringSelect-' + offeringId);
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('#pd-offeringSelect-' + offeringId).remove();
                $('#md-offeringSelect-' + offeringId).remove();
                $('#i-offeringSelect-' + offeringId).remove();
            }
            else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info')

                var pageDisplayDiv = $('#offeringSelect-' + offeringId).clone().prop('id', 'pd-offeringSelect-' + offeringId);
                pageDisplayDiv.appendTo('#SelectedClassesList');
                var modalDisplayDiv = $('#offeringSelect-' + offeringId).clone().prop('id', 'md-offeringSelect-' + offeringId);
                modalDisplayDiv.appendTo('#ModalSelectedClassesList');

                var input = $('<input>').attr('id', 'i-offeringSelect-' + offeringId)
                    .attr('name', 'Filter.Offerings')
                    .attr('type', "hidden");
                input.val(offeringId);
                var classInputDiv = $('#SelectedClassesList');
                classInputDiv.append(input);
            }
        }

        function toggleCategory(value) {
            var selectDiv = $('button[id="categorySelect-' + value + '"]');
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('button[id="pd-categorySelect-' + value + '"]').remove();
                $('button[id="md-categorySelect-' + value + '"]').remove();
                $('input[id="i-categorySelect-' + value + '"]').remove();
            }
            else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info');

                var pageDisplayDiv = $('button[id="categorySelect-' + value + '"]').clone().prop('id', 'pd-categorySelect-' + value);
                pageDisplayDiv.appendTo('#SelectedCategoriesList');
                var modalDisplayDiv = $('button[id="categorySelect-' + value + '"]').clone().prop('id', 'md-categorySelect-' + value);
                modalDisplayDiv.appendTo('#ModalSelectedCategoriesList');

                var input = $('<input>').attr('id', 'i-categorySelect-' + value)
                    .attr('name', 'Filter.Categories')
                    .attr('type', "hidden");
                input.val(value);
                var classInputDiv = $('#SelectedCategoriesList');
                classInputDiv.append(input);
            }
        }

        $(document).ready(function () {
            @foreach (var grade in Model.Filter.Grades)
            {
                @:toggleGrade('@grade');
            }

            @foreach (var category in Model.Filter.Categories)
            {
                @:toggleCategory('@category');
            }

            @foreach (var offering in Model.Filter.Offerings)
            {
                @:toggleClass(@offering);
            }

            @foreach (var school in Model.Filter.Schools)
            {
                @:toggleSchool(@school);
            }
        });

        var table = $('.custom-data-table')
            .DataTable({
                "order": [],
                "rowGroup": {
                    "dataSrc": 0
                },
                "columnDefs": [
                    { "visible": false, "targets": 0 }
                ]
            });

        $('#SendEmail').on('click', function() {
            var email = '';

            table.column(3, { search: 'applied' }).data().each(function (value, index) {
                email += value.replace(/<.*?>/ig, '') + ';';
            });

            var arr = email.split(';');
            arr = arr.filter((item, index) => arr.indexOf(item) === index);
            email = arr.join(";");

            if (email.length > 2048)
            {
                console.log("This string is too long!");

                var dummy = document.createElement("textarea");
                document.body.appendChild(dummy);
                dummy.textContent = email;
                dummy.select();
                document.execCommand("copy");
                document.body.removeChild(dummy);

                var dummyModal = $(makeModal('<p>The email addresses of all contacts in the table displayed below have been copied to your clipboard.</p><p>Please paste (with Ctrl+V) into your email client <strong>BCC field</strong> now.</p>'));
                dummyModal.modal('show');
            }
            else
            {
                window.location = 'mailto:?bcc=' + email;
            }
        });

        function makeModal(message) {
            return `
                    <div class="modal fade" id="dummyModal" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Alert!</h5>
                                </div>
                                <div class="modal-body">
                                    ${message}
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button
                                </div>
                            </div>
                        </div>
                    </div>`;
        }

    </script>
}