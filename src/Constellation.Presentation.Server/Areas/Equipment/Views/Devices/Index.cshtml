@using Constellation.Application.Helpers
@using Constellation.Application.Models.Identity
@using Constellation.Core.Enums
@model Devices_ViewModel

@{
    var authorised = (User.IsInRole(AuthRoles.EquipmentEditor) || User.IsInRole(AuthRoles.Admin));
}

<h2>Devices</h2>

<div>
    <div class="btn-group" role="group">
        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown">In Status Group <span class="caret"></span></button>
        <div class="dropdown-menu">
            <a asp-action="All" asp-controller="Devices" asp-area="Equipment" class="dropdown-item">All Devices</a>
            <a asp-action="Active" asp-controller="Devices" asp-area="Equipment" class="dropdown-item">Active</a>
            <a asp-action="Inactive" asp-controller="Devices" asp-area="Equipment" class="dropdown-item">Inactive</a>
        </div>
    </div>

    <div class="btn-group" role="group">
        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown">With Status <span class="caret"></span></button>
        <div class="dropdown-menu">
            @{
                var statuses = Enum.GetValues(typeof(Status));
                foreach (Status status in statuses)
                {
                    <a asp-action="WithStatus" asp-controller="Devices" asp-area="Equipment" asp-route-id="@((int)status)" class="dropdown-item">@status.GetDisplayName()</a>
                }
            }
        </div>
    </div>

    <div class="btn-group" role="group">
        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown">Of Make <span class="caret"></span></button>
        <div class="dropdown-menu">
            @{
                foreach (var make in Model.ListOfMakes.OrderBy(m => m))
                {
                    <a asp-action="OfMake" asp-controller="Devices" asp-area="Equipment" asp-route-make="@make" class="dropdown-item">@make</a>
                }
            }
        </div>
    </div>

    <button type="button" class="btn btn-secondary" id="custom-search-toggle">Custom Search</button>

    <div class="btn-group new-group" role="group">
        <button type="button" class="btn btn-warning dropdown-toggle" data-toggle="dropdown">Reports <span class="caret"></span></button>
        <div class="dropdown-menu">
            <a asp-action="WithoutDevice" asp-controller="Students" asp-area="Partner" class="dropdown-item">Students Without Devices</a>
            <a asp-action="ReportUsage" asp-controller="Devices" asp-area="Equipment" class="dropdown-item">Device Status Analysis</a>
        </div>
    </div>
    
    @if (authorised)
    {
        <div class="btn-group new-group" role="group">
            <a asp-action="Create" asp-controller="Devices" asp-area="Equipment" class="btn btn-primary">Create New</a>
        </div>
    }
</div>

<div class="row" id="custom-search-box">
    <div class="col-md-8">
        @{ statuses = Enum.GetValues(typeof(Status)); }
        <div class="row">
            <div class="col-md-2"><span class="menu-heading">Status Group</span></div>
            <div class="col-md-6"><input type="checkbox" value="0" name="status-group-active" id="status-group-active"/> Active
            </div>
            <div class="col-md-4"><input type="checkbox" value="0" name="status-group-inactive" id="status-group-inactive"/> Inactive
            </div>
        </div>
        <div class="row">
            <div class="col-md-2"><span class="menu-heading">Status</span></div>
            <div class="col-md-6">
                <div class="col-md-6 no-left-padding">
                    @{
                        foreach (Status status in statuses)
                        {
                            if ((int) status < 5)
                            {
                                <input type="checkbox" value="@((int) status)" name="status"/>
                                @status.GetDisplayName()
                                ;<br/>
                            }
                        }
                    }
                </div>
                <div class="col-md-6">
                    @{
                        foreach (Status status in statuses)
                        {
                            if ((int) status > 4 && (int)status < 9)
                            {
                                <input type="checkbox" value="@((int) status)" name="status"/>
                                @status.GetDisplayName()
                                ;<br/>
                            }
                        }
                    }
                </div>
            </div>
            <div class="col-md-4">
                @{
                    foreach (Status status in statuses)
                    {
                        if ((int) status > 8)
                        {
                            <input type="checkbox" value="@((int)status)" name="status" /> @status.GetDisplayName();<br/>
                        }
                    }
                }
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <span class="menu-heading">Model</span><br/>
        @{
           foreach (var make in Model.ListOfMakes.OrderBy(m => m))
           {
               <input type="checkbox" value="@make" name="make"/>@make <br/>
           }
        }
    </div>
    <div class="col-md-1">
        <button type="button" class="btn btn-success" id="custom-search-button">Search!</button>
    </div>
</div>

<hr />

<table class="table-striped table-hover data-table">
    <thead>
        <tr>
            <th>Make</th>
            <th>Serial Number</th>
            <th>Status</th>
            <th>Student</th>
            <th>School</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Devices)
        {
            <tr>
                <td>@Html.DisplayFor(model => item.Make)</td>
                <td>@Html.DisplayFor(model => item.SerialNumber)</td>
                <td>@Html.DisplayFor(model => item.Status, "Status")</td>
                <td>
                    @if (!string.IsNullOrWhiteSpace(item.StudentName)) 
                    {
                        @:@Html.DisplayFor(model => item.StudentName) (@Html.DisplayFor(model => item.StudentGrade, "Grade"))
                    }
                </td>
                <td>@Html.DisplayFor(model => item.StudentSchool)</td>
                <td>
                    @Html.ActionLink("More Info...", "Details", new { id = item.SerialNumber }, new { @class = "btn btn-sm btn-info btn-show-hover" })
                </td>
            </tr>
                    }
    </tbody>
</table>

@section scripts
{
    <script>
        $(document)
            .ready(function() {
                $('#custom-search-box').hide();
            });

        $('#status-group-active').change(function() {
            if (this.checked) {
                $('input:checkbox[name="status"][value="0"]').prop('checked', true);
                $('input:checkbox[name="status"][value="1"]').prop('checked', true);
                $('input:checkbox[name="status"][value="2"]').prop('checked', true);
                $('input:checkbox[name="status"][value="3"]').prop('checked', true);
                $('input:checkbox[name="status"][value="4"]').prop('checked', true);
                $('input:checkbox[name="status"][value="5"]').prop('checked', true);
                $('input:checkbox[name="status"][value="6"]').prop('checked', true);
                $('input:checkbox[name="status"][value="7"]').prop('checked', true);
                $('input:checkbox[name="status"][value="8"]').prop('checked', true);
            } else {
                $('input:checkbox[name="status"][value="0"]').prop('checked', false);
                $('input:checkbox[name="status"][value="1"]').prop('checked', false);
                $('input:checkbox[name="status"][value="2"]').prop('checked', false);
                $('input:checkbox[name="status"][value="3"]').prop('checked', false);
                $('input:checkbox[name="status"][value="4"]').prop('checked', false);
                $('input:checkbox[name="status"][value="5"]').prop('checked', false);
                $('input:checkbox[name="status"][value="6"]').prop('checked', false);
                $('input:checkbox[name="status"][value="7"]').prop('checked', false);
                $('input:checkbox[name="status"][value="8"]').prop('checked', false);
            }
        });

        $('#status-group-inactive').change(function() {
            if (this.checked) {
                $('input:checkbox[name="status"][value="9"]').prop('checked', true);
                $('input:checkbox[name="status"][value="10"]').prop('checked', true);
                $('input:checkbox[name="status"][value="11"]').prop('checked', true);
                $('input:checkbox[name="status"][value="12"]').prop('checked', true);
            } else {
                $('input:checkbox[name="status"][value="9"]').prop('checked', false);
                $('input:checkbox[name="status"][value="10"]').prop('checked', false);
                $('input:checkbox[name="status"][value="11"]').prop('checked', false);
                $('input:checkbox[name="status"][value="12"]').prop('checked', false);
            }
        });

        $('#custom-search-toggle').click(function() {
            $('#custom-search-box').toggle();
        });

        $('#custom-search-button').click(function() {
            var searchParam = "?search=custom";

            $('input:checkbox[name="status"]').each(function() {
                if ($(this).prop('checked')) {
                    searchParam += "&status=" + $(this).attr('value');
                }
            });

            $('input:checkbox[name="make"]').each(function() {
                if ($(this).prop('checked')) {
                    searchParam += "&make=" + $(this).attr('value');
                }
            });

            var searchUrl = "@Url.Action("Search")";

            window.location.href = searchUrl + searchParam;
        });
    </script>
}