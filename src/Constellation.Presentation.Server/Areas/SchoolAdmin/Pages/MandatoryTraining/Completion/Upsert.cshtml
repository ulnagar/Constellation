@page "{id:Guid?}"
@using Constellation.Core.Enums
@model UpsertModel
@using Constellation.Presentation.Server.Areas.SchoolAdmin.Pages.MandatoryTraining.Completion

@{
    var title = Model.Id.HasValue ? "Edit Training Completion Record" : "Create New Training Completion Record";
}

<h2>@title</h2>

<div class="row">
    <a asp-page="Index" class="btn btn-danger btn-pull-right-solo">Go Back</a>
</div>

<hr />

<form asp-page-handler="Update" asp-route-mode="@Model.Mode" enctype="multipart/form-data">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ModuleId)

        <div class="form-group row">
            <label asp-for="StaffId" class="col-md-2">Staff Member</label>
            <div class="col-md-5">
                @if (Model.Mode == UpsertModel.ModeOptions.SOLOSTAFF || Model.Mode == UpsertModel.ModeOptions.CERTUPLOAD)
                {
                    <input type="hidden" asp-for="StaffId" />
                    <input type="text" class="form-control" readonly="readonly" value="@Model.SoloStaffMember.Value" />
                } 
                else
                {
                    <select asp-for="StaffId" asp-items="@(new SelectList(Model.StaffOptions, "Key", "Value"))" class="form-control combo custom-select">
                        <option selected="selected" value=""> -- Please Select -- </option>
                    </select>
                    <span asp-validation-for="StaffId" class="text-danger"></span>
                }
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="TrainingModuleId" class="col-md-2">Training Module</label>
            <div class="col-md-8">
                @if (Model.Mode == UpsertModel.ModeOptions.SOLOMODULE || Model.Mode == UpsertModel.ModeOptions.CERTUPLOAD)
                {
                    <input type="hidden" asp-for="TrainingModuleId" />
                    <input type="text" class="form-control" readonly="readonly" value="@Model.SoloModule.Value" />
                } else
                {
                    <select asp-for="TrainingModuleId" asp-items="@(new SelectList(Model.ModuleOptions, "Key", "Value"))" class="form-control combo custom-select">
                        <option selected="selected" value=""> -- Please Select -- </option>
                    </select>
                    <span asp-validation-for="TrainingModuleId" class="text-danger"></span>
                }
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="CompletedDate" class="col-md-2">Date Completed</label>
            <div class="col-md-3">
                @if (Model.Mode == UpsertModel.ModeOptions.CERTUPLOAD)
                {
                    <input asp-for="CompletedDate" class="form-control" readonly="readonly" />
                } 
                else
                {
                    <input asp-for="CompletedDate" class="form-control" />
                    <span asp-validation-for="CompletedDate" class="text-danger"></span>
                }
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="NotRequired" class="col-md-2">Not Required</label>
            <div class="col-md-3">
                @if (Model.Mode == UpsertModel.ModeOptions.CERTUPLOAD)
                {
                    <input asp-for="NotRequired" class="form-control" readonly="readonly" />
                }
                else
                {
                    <input asp-for="NotRequired" class="form-control" />
                    <span asp-validation-for="NotRequired" class="text-danger"></span>
                }
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="FormFile" class="col-md-2">Certificate</label>
            <div class="col-md-8">
                <div class="custom-file">
                    <input asp-for="FormFile" type="file" class="custom-file-input" />
                    <label class="custom-file-label" asp-for="FormFile">Choose file</label>
                </div>
                <div class="font-italic">
                    Only accepts PDF files. Max file size is 10Mb.
                </div>
                <span asp-validation-for="FormFile" class="text-danger"></span>
            </div>
            @if (!string.IsNullOrWhiteSpace(Model.UploadedCertificate?.Name))
            {
                <div class="offset-2 col-md-8">
                    <span class="font-weight-bold">Existing File: @Model.UploadedCertificate.Name</span>
                </div>
            }
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <input type="submit" value="Save" class="btn btn-primary btn-block btn-lg" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
    </script>
}