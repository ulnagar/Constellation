@page "{id:Guid?}"

@model Constellation.Presentation.Server.Areas.SchoolAdmin.Pages.Consent.Applications.UpsertModel

@{
    var title = Model.Id.HasValue ? "Edit Application Record" : "Create New Application Record";
}

<h2>@title</h2>

<div class="page-menu">
    <a href="javascript:history.go(-1)" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<form method="post">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group row">
            <label asp-for="Name" class="col-md-2">Name</label>
            <div class="col-md-5">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="Purpose" class="col-md-2">Purpose</label>
            <div class="col-md-8">
                <input asp-for="Purpose" class="form-control" />
                <span asp-validation-for="Purpose" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="InformationCollected" class="col-md-2">Information Collected</label>
            <div id="infoCollList" class="col-md-8">
                <span asp-validation-for="InformationCollected" class="text-danger"></span>
                @for (int i = 0; i < Model.InformationCollected.Count; i++)
                {
                    <div class="input-group" id="infoColl-@i">
                        <input type="text" class="form-control" name="informationCollected[@i]" id="informationCollected[@i]">
                        <div class="input-group-append" id="button-addon-infoColl-@i">
                            <button class="btn btn-outline-danger" type="button" onClick="removeInfoCollItem('@i')">-</button>
                            @if (i == Model.InformationCollected.Count - 1)
                            {
                                <button class="btn btn-outline-success" type="button" onClick="addInfoCollItem('@Model.InformationCollected.Count')">+</button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="StoredCountry" class="col-md-2">Stored Country</label>
            <div class="col-md-8">
                <input asp-for="StoredCountry" class="form-control"/>
                <span asp-validation-for="StoredCountry" class="text-danger"></span>
            </div>
        </div>
        
        <div class="form-group row">
            <label asp-for="SharedWith" class="col-md-2">Shared With</label>
            <div class="col-md-8">
                <span asp-validation-for="SharedWith" class="text-danger"></span>
                @for (int i = 0; i < Model.SharedWith.Count; i++)
                {
                    <div class="input-group">
                        <input type="text" class="form-control" id="sharedWith-@i" name="sharedWith[i]">
                        <div class="input-group-append" id="button-addon-sharedWith-@i">
                            <button class="btn btn-outline-primary" type="button">+</button>
                            <button class="btn btn-outline-danger" type="button">-</button>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        <div class="form-group row">
            <label asp-for="ConsentRequired" class="col-md-2">Consent Required</label>
            <div class="col-md-8">
                <input asp-for="ConsentRequired" class="form-control"/>
                <span asp-validation-for="ConsentRequired" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-3">
                <input type="submit" value="Save" class="btn btn-primary btn-block btn-lg" />
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function addInfoCollItem(nextId) {
            var id = Number(nextId);

            var prevId = id - 1;
            var currId = id;
            var incrId = id + 1;

            // Remove the add button from the current input
            $('#button-addon-infoColl-' + prevId).children().last().remove();

            // Add new input with new index number
            var input = '<div class="input-group" id="infoColl-' + currId + '">';
            input += '<input type="text" class="form-control" name="informationCollected[' + currId + ']" >';
            input += '<div class="input-group-append" id="button-addon-infoColl-' + currId + '">';
            input += '<button class="btn btn-outline-danger" type="button" onClick="removeInfoCollItem(\'' + currId + '\')">-</button>';
            input += '<button class="btn btn-outline-success" type="button" onClick="addInfoCollItem(\'' + incrId + '\')">+</button>';
            input += '</div>';
            input += '</div>';
            
            $('#infoCollList').append(input);
        }

        function removeInfoCollItem(infoCollId) {
            var id = Number(infoCollId);
            
            var prevId = id - 1;
            var currId = id;
            var incrId = id + 1;

            var lastItem = $('infoColl-' + incrId).length;

            console.log(lastItem);

            // Remove item at the index selected
            if (currId == 0 && lastItem) {
                $('#informationCollected[' + currId + ']').val("");
            }
            else {
                $('#infoColl-' + currId).remove();

                // Check if it is the last item
                if (lastItem) {
                    // There is another entry after this, do nothing
                }
                else {
                    var input = '<button class="btn btn-outline-success" type="button" onClick="addInfoCollItem(\'' + currId + '\')">+</button>';

                    $('button-addon-infoColl-' + prevId).append(input);
                }
            }
        }

        function toggleOffering(offeringId) {
            var selectDiv = $('#offeringSelect-' + offeringId);
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info')

                $('#pd-offeringSelect-' + offeringId).remove();
                $('#i-offeringSelect-' + offeringId).remove();
            }
            else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info')

                var pageDisplayDiv = $('#offeringSelect-' + offeringId).clone().prop('id', 'pd-offeringSelect-' + offeringId);
                pageDisplayDiv.appendTo('#SelectedOfferingsList');

                var input = $('<input>').attr('id', 'i-offeringSelect-' + offeringId)
                    .attr('name', 'SelectedOfferingIds')
                    .attr('type', "hidden");
                input.val(offeringId);
                var classInputDiv = $('#SelectedOfferingsList');
                classInputDiv.append(input);
            }
        }
    </script>
}