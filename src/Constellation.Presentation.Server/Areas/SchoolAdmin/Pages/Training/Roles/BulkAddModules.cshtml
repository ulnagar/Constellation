@page
@model Constellation.Presentation.Server.Areas.SchoolAdmin.Pages.Training.Roles.BulkAddModulesModel
@{
}

<h2>Add Modules</h2>

<div class="page-menu">
    <a href="javascript:history.go(-1)" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<h4>Select modules to be added to the @Model.Role.Name Training Role</h4>

<form method="post">
    <div class="row">
        <div class="col">
            <label class="text-bold">Existing Modules:</label>
            <div>
                @foreach (var entry in Model.Role.Modules)
                {
                    <button type="button" class="btn btn-outline-success staff-button">@entry.Name</button>
                }
            </div>
        </div>
    </div>

    <hr />

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="row">
        <div class="col">
            <label class="text-bold">Selected Modules:</label>
            <div id="SelectedModuleList">
                @foreach (var entry in Model.SelectedModuleIds)
                {
                    var module = Model.Modules.FirstOrDefault(module => module.Id.Value == entry);

                    if (module is not null)
                    {
                        <button type="button" id="moduleSelect-@module.Id.Value" class="btn btn-outline-info module-button" onClick="toggleModule('@module.Id.Value')">@module.Name</button>
                    }
                }
            </div>
        </div>
    </div>

    <hr />

    <div class="form-group">
        <div class="col-md-3">
            <input type="submit" value="Save" class="btn btn-primary btn-block btn-lg" />
        </div>
    </div>
</form>

<hr />

<div class="row">
    @{
        var partitionedList = Model.Modules.OrderBy(module => module.Name).Partition(Model.Modules.Count / 2);

        foreach (var list in partitionedList)
        {
            <div class="col-6 button-list">
                @foreach (var entry in list)
                {
                    if (Model.Role.Modules.Any(module => module.ModuleId.Value == entry.Id.Value))
                    {
                        <button type="button" class="btn btn-outline-success module-button">@entry.Name</button>
                    }
                    else
                    {
                        <button type="button" id="moduleSelect-@entry.Id.Value" class="btn btn-outline-info module-button" onClick="toggleModule('@entry.Id.Value')">@entry.Name</button>
                    }
                }
            </div>
        }
    }
</div>

@section scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function toggleModule(moduleId) {
            var selectDiv = $('#moduleSelect-' + moduleId);
            if (selectDiv.hasClass('btn-info')) {
                // Selected, need to deselect
                selectDiv.removeClass('btn-info');
                selectDiv.addClass('btn-outline-info');

                $('#pd-moduleSelect-' + moduleId).remove();
                $('#i-moduleSelect-' + moduleId).remove();
            } else {
                // Deselected, need to select
                selectDiv.addClass('btn-info');
                selectDiv.removeClass('btn-outline-info');

                var pageDisplayDiv = $('#moduleSelect-' + moduleId).clone().prop('id', 'pd-moduleSelect-' + moduleId);
                pageDisplayDiv.appendTo('#SelectedModuleList');

                var input = $('<input>').attr('id', 'i-moduleSelect-' + moduleId)
                    .attr('name', 'SelectedModuleIds')
                    .attr('type', 'hidden');
                input.val(moduleId);
                pageDisplayDiv.append(input);
            }
        }
    </script>
}
