@page "{Id:guid}"
@model Constellation.Presentation.Server.Areas.SchoolAdmin.Pages.Absences.DetailsModel

@using Constellation.Application.Extensions
@using Constellation.Core.Models.Absences;
@using Constellation.Core.Models.Identifiers;

@inject IAuthorizationService authorizationService;

@{
    var authorised = await authorizationService.AuthorizeAsync(User, AuthPolicies.CanManageAbsences);
}

<h2>Absence Details</h2>

<div class="page-menu">
    <a href="javascript:history.go(-1)" class="btn btn-danger btn-pull-right">Go Back</a>
</div>

<hr />

<div>
    <dl class="row">
        <dt class="col-md-2">
            <label asp-for="Absence.StudentName">Student</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.StudentName.DisplayName</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.StudentGrade">Grade</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.StudentGrade.AsName()</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.SchoolName">School</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.SchoolName</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.AbsenceType">Absence Type</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.AbsenceType.Name</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.AbsenceDate">Date</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.AbsenceDate.ToShortDateString()</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.PeriodName">Period</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.PeriodName</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.PeriodTimeframe">Period Timeframe</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.PeriodTimeframe</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.AbsenceLength">Absence Length</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.AbsenceLength minutes</span>
        </dd>

        <dt class="col-md-2">
            <label asp-for="Absence.AbsenceTimeframe">Absence Timeframe</label>
        </dt>
        <dd class="col-md-10">
            <span>@Model.Absence.AbsenceTimeframe</span>
        </dd>
    </dl>
</div>

<hr />

<div>
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active" href="#notifications" data-toggle="tab" role="tab">
                Notifications
                @if (Model.Absence.Notifications.Any())
                {
                    <span class="badge">@Model.Absence.Notifications.Count()</span>
                }
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#responses" data-toggle="tab" role="tab">
                Responses
                @if (Model.Absence.Responses.Any())
                {
                    <span class="badge">@Model.Absence.Responses.Count()</span>
                }
            </a>
        </li>
    </ul>

    <div class="tab-content">
        <div id="notifications" class="tab-pane active">
            <h3>Notifications</h3>

            @if (authorised.Succeeded)
            {
                <a asp-page-handler="SendNotification" asp-route-studentId="@Model.Absence.StudentId" class="btn btn-info">Resent Email</a>
            }

            <table class="table-striped data-table">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>To</th>
                        <th>Message</th>
                        <th>Sent</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Absence.Notifications.OrderBy(n => n.SentAt))
                    {
                        <tr>
                            <td>@item.Type.Value</td>
                            <td>@item.Recipients</td>
                            <td>
                                @if (item.Type == NotificationType.SMS)
                                {
                                    <span>@item.Message</span>
                                }
                                else
                                {
                                    <a asp-page="ViewEmail" asp-area="SchoolAdmin" asp-route-absenceGuid="@Model.Absence.AbsenceId" asp-route-notificationGuid="@item.NotificationId" target="_blank" class="btn btn-secondary">Click to view</a>
                                }
                            </td>
                            <td>@item.SentAt.ToShortDateString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="responses" class="tab-pane">
            <h3>Responses</h3>

            <table class="table-striped table-hover data-table">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Explanation</th>
                        <th>Verified Status</th>
                        <th>Received</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Absence.Responses.OrderBy(r => r.ReceivedAt))
                    {
                        <tr>
                            <td>@item.Type.Value</td>
                            <td>@item.Explanation</td>
                            <td>
                                @if (item.Status == ResponseVerificationStatus.Verified)
                                {
                                    <a href="#" data-toggle="tooltip" title="Verified by @item.Verifier on @item.VerifiedAt.Value.ToShortDateString()"><span class="label label-success"><span class="glyphicon glyphicon-ok" /> Verified</span></a>
                                }
                                else if (item.Status == ResponseVerificationStatus.Rejected)
                                {
                                    <a href="#" data-toggle="tooltip" title="Rejected by @item.Verifier on @item.VerifiedAt.Value.ToShortDateString() with comment @item.VerifierComment"><span class="label label-danger"><span class="glyphicon glyphicon-remove" /> Rejected</span></a>
                                }
                                else if (item.Status == ResponseVerificationStatus.Pending)
                                {
                                    @:<span class="label label-info"><span class="glyphicon glyphicon-refresh" /> Pending</span>
                                }
                                else if (item.Status == null || item.Status == ResponseVerificationStatus.NotRequired || item.Type == ResponseType.Parent || item.Type == ResponseType.Coordinator)
                                {
                                    @:<span class="label label-info"><span class="glyphicon glyphicon-ban-circle" /> Not Required</span>
                                }
                            </td>
                            <td>@item.ReceivedAt.ToShortDateString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="page-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Role</h5>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>