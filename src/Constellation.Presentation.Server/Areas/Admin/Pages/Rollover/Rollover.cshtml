@page
@model Constellation.Presentation.Server.Areas.Admin.Pages.Rollover.RolloverModel

@using Constellation.Application.Extensions
@using Constellation.Core.Models.Rollover.Enums

<h2>Rollover</h2>

@if (Model.ProcessResults.Count == 0)
{
    <div class="page-menu">
        <button class="btn btn-primary" onclick="MarkAllWithdrawn()">Mark All Withdrawn</button>
        <button class="btn btn-primary" onclick="MarkAllRemain()">Mark All Remain</button>
        <button class="btn btn-primary" onclick="MarkAllRollover()">Mark All Rollover</button>
    </div>

    <hr />

    <form method="post">
        <input type="hidden" asp-for="CurrentGrade" value="@Model.CurrentGrade" />

        <table class="table">
            <thead>
            <tr>
                <th>SRN</th>
                <th>Student</th>
                <th>Grade</th>
                <th>School</th>
                <th>Action</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var entry in Model.Statuses)
            {
                <tr>
                    <td>
                        <input type="hidden" name="Statuses.Index" value="@entry.StudentId" />
                        <input type="hidden" name="Statuses[@entry.StudentId].StudentId" value="@entry.StudentId" />
                        @entry.StudentId
                    </td>
                    <td>
                        <input type="hidden" name="Statuses[@entry.StudentId].StudentName" value="@entry.StudentName" />
                        @entry.StudentName
                    </td>
                    <td>
                        <input type="hidden" name="Statuses[@entry.StudentId].Grade" value="@entry.Grade" />
                        @entry.Grade.AsName()
                    </td>
                    <td>
                        <input type="hidden" name="Statuses[@entry.StudentId].SchoolName" value="@entry.SchoolName" />
                        @entry.SchoolName
                    </td>
                    <td>
                        <select class="waiting-value" name="Statuses[@entry.StudentId].Decision">
                            <option value="@RolloverStatus.Rollover">Rollover</option>
                            <option value="@RolloverStatus.Withdraw">Withdraw</option>
                            <option value="@RolloverStatus.Remain">Remain</option>
                        </select>
                    </td>
                </tr>
            }
            </tbody>
        </table>

        <div>
            <button type="submit" class="btn btn-large btn-success">Submit</button>
        </div>
    </form>
}
else
{
    <div class="page-menu">

    </div>

    <hr />

    <table class="table table-striped table-hover data-table">
        <thead>
            <tr>
                <th></th>
                <th>Student Name</th>
                <th>Previous Grade</th>
                <th>School</th>
                <th>Error</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in Model.ProcessResults)
            {
                <tr>
                    <td>
                        @if (entry.Result.IsSuccess)
                        {
                            <i class="fal fa-check"></i>
                        }
                        else
                        {
                            <i class="fal fa-times"></i>
                        }
                    </td>
                    <td>@entry.Decision.StudentName</td>
                    <td>@entry.Decision.Grade.AsName()</td>
                    <td>@entry.Decision.SchoolName</td>
                    <td>@entry.Result?.Error</td>
                </tr>
            }
        </tbody>
    </table>
}

@section scripts
{   
    <script>
        function MarkAllWithdrawn() {
            $('.waiting-value').val("@RolloverStatus.Withdraw").change();
        }

        function MarkAllRemain() {
            $('.waiting-value').val("@RolloverStatus.Remain").change();
        }

        function MarkAllRollover() {
            $('.waiting-value').val("@RolloverStatus.Rollover").change();
        }
    </script>
}