@using Constellation.Presentation.Server.Areas.Portal.Models.Lessons
@model AdminViewModel

@{
    var all_style = "btn-outline-secondary";
    var future_style = all_style;
    var overdue_style = all_style;
    var completed_style = all_style;

    switch (Model.filter)
    {
        case "":
            all_style = "btn-primary";
            break;
        case "future":
            future_style = "btn-primary";
            break;
        case "overdue":
            overdue_style = "btn-primary";
            break;
        case "completed":
            completed_style = "btn-primary";
            break;
    }
}
<h2>Science Practical Lessons</h2>

<div>
    <div class="btn-group">
        <a asp-action="AdminLessons" asp-controller="Lessons" asp-area="Portal" asp-route-filter="" class="btn @all_style">All</a>
        <a asp-action="AdminLessons" asp-controller="Lessons" asp-area="Portal" asp-route-filter="future" class="btn @future_style">Future</a>
        <a asp-action="AdminLessons" asp-controller="Lessons" asp-area="Portal" asp-route-filter="overdue" class="btn @overdue_style">Overdue</a>
        <a asp-action="AdminLessons" asp-controller="Lessons" asp-area="Portal" asp-route-filter="completed" class="btn @completed_style">Completed</a>
    </div>

    <button type="button" data-toggle="modal" data-target="#searchLesson" class="btn btn-secondary">Search</button>

    <a asp-action="AdminUpsertLesson" asp-controller="Lessons" asp-area="Portal" class="btn btn-info">Create New</a>
</div>

<hr />

<table class="table-striped table-hover data-table">
    <thead>
        <tr>
            <th></th>
            <th>Due Date</th> 
            <th>Course</th>
            <th>Name</th>
            <th>
                @if (Model.SearchResult)
                {
                    @:Attendance
                }
                else
                {
                    @:Completed Rolls
                }
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Lessons.OrderBy(lesson => lesson.DueDate))
        {
            <tr>
                <td>
                    @if (item.Overdue)
                    {
                        <span class="glyphicon glyphicon-warning-sign glyph-color-red" />
                    }
                </td>
                <td>@Html.DisplayFor(model => item.DueDate, "ShortDate")</td>
                <td>@Html.DisplayFor(model => item.CourseName)</td>
                <td>@Html.DisplayFor(model => item.Name)</td>
                <td>
                    @if (Model.SearchResult)
                    {
                        @:@Html.DisplayFor(model => item.AttendanceStatistics) (@Html.DisplayFor(model => item.Status))
                    }
                    else
                    {
                        @Html.DisplayFor(model => item.AttendanceStatistics)
                    }
                </td>
                <td>
                    @if (Model.SearchResult)
                    {
                        <a asp-action="AdminRollDetails" asp-controller="Lessons" asp-area="Portal" asp-route-id="@item.Id" class="btn btn-sm btn-info btn-show-hover">More Info...</a>
                    }
                    else
                    {
                        <a asp-action="AdminLessonDetails" asp-controller="Lessons" asp-area="Portal" asp-route-id="@item.Id" class="btn btn-sm btn-info btn-show-hover">More Info...</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@await Html.PartialAsync("_lessonSearch", Model.SearchViewModel)