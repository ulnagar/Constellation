@page
@model Constellation.Presentation.Staff.Areas.Staff.Pages.Partner.Schools.Contacts.IndexModel

@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Constellation.Application.SchoolContacts.GetAllContacts

@inject IAuthorizationService authService

@{
    var authorised = await authService.AuthorizeAsync(User, AuthPolicies.CanManageSchoolContacts);
}

<h2>School Contacts</h2>

<div class="page-menu">
    @{
        var allStyle = "btn-outline-secondary";
        var withRoleStyle = allStyle;
        var withoutRoleStyle = allStyle;

        switch (Model.Filter)
        {
            case GetAllContactsQuery.SchoolContactFilter.All:
                allStyle = "btn-primary";
                break;
            case GetAllContactsQuery.SchoolContactFilter.WithRole:
                withRoleStyle = "btn-primary";
                break;
            case GetAllContactsQuery.SchoolContactFilter.WithoutRole:
                withoutRoleStyle = "btn-primary";
                break;
        }
    }

    <div class="btn-group">
        <a asp-route-filter="@GetAllContactsQuery.SchoolContactFilter.All" class="btn @allStyle">All</a>
        <a asp-route-filter="@GetAllContactsQuery.SchoolContactFilter.WithRole" class="btn @withRoleStyle">With Role</a>
        <a asp-route-filter="@GetAllContactsQuery.SchoolContactFilter.WithoutRole" class="btn @withoutRoleStyle">Without Role</a>
    </div>

    @if (authorised.Succeeded)
    {
        <div class="btn-group" role="group">
            <a asp-page="/Partner/Schools/Contacts/Create" asp-area="Staff" class="btn btn-info">Create New</a>
        </div>
    }
</div>

<hr />

<table class="table-striped table-hover @(Model.Filter == GetAllContactsQuery.SchoolContactFilter.WithoutRole ? "data-table" : "grouped-data-table")">
    <thead>
    <tr>
        <th>School</th>
        <th>Name</th>
        <th>Email</th>
        <th>Phone Number</th>
        <th>Role</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Contacts)
    {
        <tr>
            <td>
                @if (item.IsActivePartnerSchool)
                {
                    <i class="fal fa-school mr-1"></i>
                }
                @item.SchoolName
            </td>
            <td class="text-nowrap">@item.Name</td>
            <td>@Html.DisplayFor(model => item.EmailAddress, "EmailAddress")</td>
            <td class="text-nowrap">
                @if (item.IsDirectNumber)
                {
                    <i class="fal fa-user mr-1"></i>
                }
                else if (!string.IsNullOrWhiteSpace(item.PhoneNumber))
                {
                    <i class="fal fa-school mr-2"></i>
                }
                @Html.DisplayFor(model => item.PhoneNumber, "PhoneNumber")
            </td>
            <td>
                @Html.DisplayFor(model => item.Role)
                @if (!string.IsNullOrWhiteSpace(item.Note))
                {
                    <br/>
                    <span class="font-italic text-muted">@item.Note</span>
                }
            </td>
            <td>
                @if (authorised.Succeeded)
                {
                    <div class="btn-group" role="group">
                        <button id="btnGroupDrop1" type="button" class="btn btn-warning dropdown-toggle btn-show-hover" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> Actions</button>
                        <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                            <a asp-page="/Partner/Schools/Contacts/Update" asp-area="Staff" asp-route-id="@item.Id" class="dropdown-item">Edit Contact</a>
                            <button class="dropdown-item create-assignment-button" data-contact-id="@item.Id.Value" data-name="@item.Name">Add Role</button>
                            @if (!string.IsNullOrEmpty(item.Role))
                            {
                                <button data-contact-id="@item.Id.Value" data-role-id="@item.AssignmentId.Value" data-note="@item.Note" class="dropdown-item update-note-button">Update Note</button>
                                <button data-contact-id="@item.Id.Value" data-role-id="@item.AssignmentId.Value" data-name="@item.Name" data-role="@item.Role" data-school="@item.SchoolName" class="dropdown-item delete-role-button">Remove Role</button>
                            }
                            <div class="dropdown-divider"></div>
                            <a asp-page-handler="RepairUser" asp-route-id="@item.Id" class="dropdown-item">Repair Account</a>
                        </div>
                    </div>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@Html.AntiForgeryToken()

<div class="modal fade" id="page-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

@section scripts {
    <script>
        $('.delete-role-button').click(function (event) {
            var contactId = $(this).data("contactId");
            var roleId = $(this).data("roleId");
            var name = $(this).data("name");
            var role = $(this).data("role");
            var school = $(this).data("school");
            var xsrfHeader = $('input:hidden[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: "?handler=AjaxDelete",
                type: "POST",
                data: {
                    contactId: contactId,
                    roleId: roleId,
                    name: name,
                    role: role,
                    school: school,
                    __RequestVerificationToken: xsrfHeader
                }
            }).done(function (data) {
                $('#page-modal .modal-content').html(data);
                $('#page-modal').modal('show');
            });
        });

        $('.update-note-button').click(function (event) {
            var contactId = $(this).data("contactId");
            var roleId = $(this).data("roleId");
            var note = $(this).data("note");
            var xsrfHeader = $('input:hidden[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: "?handler=AjaxUpdateNote",
                type: "POST",
                data: {
                    contactId: contactId,
                    roleId: roleId,
                    note: note,
                    __RequestVerificationToken: xsrfHeader
                }
            }).done(function (data) {
                $('#page-modal .modal-content').html(data);
                $('#page-modal').modal('show');
            });
        });

        $('.create-assignment-button').click(function (event) {
            var contactId = $(this).data("contactId");
            var name = $(this).data("name");
            var xsrfHeader = $('input:hidden[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: "?handler=AjaxAssign",
                type: "POST",
                data: {
                    name: name,
                    contactId: contactId,
                    __RequestVerificationToken: xsrfHeader
                }
            }).done(function (data) {
                $('#page-modal .modal-content').html(data);
                $('#page-modal').modal('show');

                // Activate any comboboxes
                $("#page-modal .combo").select2({ theme: 'bootstrap' });

                // Activate any comboboxes with free-text entry
                $("#page-modal .combo-with-tag").select2({
                    theme: 'bootstrap',
                    tags: true
                });
            });
        });
    </script>
}